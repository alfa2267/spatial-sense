"use strict";(self.webpackChunkspatialsense_temp=self.webpackChunkspatialsense_temp||[]).push([[961],{9325:(t,e,a)=>{a.r(e),a.d(e,{default:()=>p});var r=a(5043),o=a(6803),n=a(3969),s=a(4527),i=a(5895),c=a(1859),d=a(2950),l=a(9379);class h{constructor(){this.config={baseUrl:"/api",useMockData:!0,mockDataPath:"/data"}}configure(t){this.config=(0,l.A)((0,l.A)({},this.config),t)}async fetch(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(this.config.useMockData)return this.mockFetch(t,e);const a="".concat(this.config.baseUrl).concat(t);try{const t=await fetch(a,(0,l.A)((0,l.A)({},e),{},{headers:(0,l.A)({"Content-Type":"application/json"},e.headers)}));if(!t.ok){let e="Request failed with status ".concat(t.status);try{e=(await t.json()).message||e}catch(r){}throw new Error(e)}return await t.json()}catch(o){throw console.error("API Error [".concat(t,"]:"),o),o}}async mockFetch(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const a=t.replace(/^\//,"").split("/").filter(Boolean),[r,o]=a,n=e.method||"GET";if(!this.isValidEntityType(r))throw new Error("Invalid entity type: ".concat(r));try{if("GET"===n&&r&&!o){const t=await fetch("".concat(this.config.mockDataPath,"/").concat(r,".json"));if(!t.ok)throw new Error("Mock data file not found: ".concat(r,".json"));return{data:await t.json(),success:!0}}if("GET"===n&&r&&o){const t=await fetch("".concat(this.config.mockDataPath,"/").concat(r,".json"));if(!t.ok)throw new Error("Mock data file not found: ".concat(r,".json"));const e=await t.json(),a=Array.isArray(e)?e.find((t=>t.id===o)):null;if(!a)throw new Error("".concat(this.getEntitySingular(r)," with id '").concat(o,"' not found"));return{data:a,success:!0}}if("POST"===n&&r){if(!e.body)throw new Error("Request body is required for POST operations");const t=JSON.parse(e.body),a=(new Date).toISOString();return{data:(0,l.A)((0,l.A)({},t),{},{id:"mock-".concat(Date.now(),"-").concat(Math.random().toString(36).substr(2,9)),createdAt:a,updatedAt:a}),success:!0}}if("PUT"===n&&r&&o){if(!e.body)throw new Error("Request body is required for PUT operations");const t=JSON.parse(e.body);return{data:(0,l.A)((0,l.A)({},t),{},{id:o,updatedAt:(new Date).toISOString()}),success:!0}}if("DELETE"===n&&r&&o)return{data:{success:!0,id:o},success:!0};throw new Error("Unsupported operation: ".concat(n," ").concat(t))}catch(s){throw console.error("Mock fetch error:",s),s}}isValidEntityType(t){return["clients","projects","devices","strategies","dashboards","invoices","timeline","floorplans"].includes(t)}getEntitySingular(t){return{clients:"client",projects:"project",devices:"device",strategies:"strategy",dashboards:"dashboard",invoices:"invoice",timeline:"timeline",floorplans:"floorplan"}[t]||t}async getAllEntities(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const a=new URLSearchParams;Object.entries(e).forEach((t=>{let[e,r]=t;void 0!==r&&null!==r&&a.append(e,String(r))}));const r=a.toString(),o="/".concat(t).concat(r?"?".concat(r):""),n=await this.fetch(o);return(null===n||void 0===n?void 0:n.data)||[]}async getEntityById(t,e){if(!e||"string"!==typeof e)throw new Error("Valid ID is required");const a=await this.fetch("/".concat(t,"/").concat(encodeURIComponent(e)));if(!a.data)throw new Error("No data returned for ".concat(t," with id ").concat(e));return a.data}async createEntity(t,e){if(!e||"object"!==typeof e)throw new Error("Valid data object is required");const a=await this.fetch("/".concat(t),{method:"POST",body:JSON.stringify(e)});if(!a.data)throw new Error("Failed to create ".concat(t));return a.data}async updateEntity(t,e,a){if(!e||"string"!==typeof e)throw new Error("Valid ID is required");if(!a||"object"!==typeof a)throw new Error("Valid data object is required");const r=await this.fetch("/".concat(t,"/").concat(encodeURIComponent(e)),{method:"PUT",body:JSON.stringify(a)});if(!r.data)throw new Error("Failed to update ".concat(t," with id ").concat(e));return r.data}async deleteEntity(t,e){if(!e||"string"!==typeof e)throw new Error("Valid ID is required");if(!(await this.fetch("/".concat(t,"/").concat(encodeURIComponent(e)),{method:"DELETE"})).data)throw new Error("Failed to delete ".concat(t," with id ").concat(e));return{success:!0,id:e}}}const u=new class extends h{async fetch(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return super.fetch(t,e)}static async loadData(t){try{const e=await fetch("/data/".concat(t));if(!e.ok)throw new Error("Failed to load ".concat(t,": ").concat(e.statusText));return await e.json()}catch(e){throw console.error("Error loading ".concat(t,":"),e),e}}static async getClients(){return this.loadData("clients.json")}static async getProjects(){try{const t=await this.loadData("projects.json");return!t||Array.isArray(t)&&0===t.length||"object"===typeof t&&0===Object.keys(t).length?(console.warn("No valid projects data found, using default data"),this.getDefaultProjects()):t}catch(t){return console.warn("Error loading projects, using default data:",t),this.getDefaultProjects()}}static getDefaultProjects(){return[{id:"proj-001",name:"Residential Property Analysis",clientId:"client-001",status:"active",progress:65,startDate:(new Date).toISOString(),targetDate:new Date(Date.now()+2592e6).toISOString(),budget:5e3,description:"Comprehensive analysis of residential property market trends",location:"London",type:"residential",team:["user-001","user-002"],tags:["residential","market-analysis","high-priority"],createdBy:"user-001",createdAt:(new Date).toISOString(),updatedAt:(new Date).toISOString()}]}};var f=a(5046),g=a(579);const p=()=>{const[t,e]=(0,r.useState)([]),[a,l]=(0,r.useState)(!0),[h,p]=(0,r.useState)(null);(0,r.useEffect)((()=>{(async()=>{try{l(!0);const t=await u.fetch("/strategies");t.success&&t.data?e(t.data):p("Failed to load strategies")}catch(t){console.error("Error loading strategies:",t),p("An error occurred while loading strategies")}finally{l(!1)}})()}),[]);const w=()=>{console.log("Navigate to create strategy")};return(0,g.jsxs)(f.LN,{children:[(0,g.jsx)(f.zY,{title:"Strategies",actions:[{label:"New Strategy",onClick:w,icon:(0,g.jsx)(d.A,{})}],loading:a}),h&&(0,g.jsx)(o.A,{severity:"error",sx:{mb:2},children:h}),(0,g.jsx)(n.A,{sx:{display:"grid",gridTemplateColumns:{xs:"1fr",md:"repeat(2, 1fr)",lg:"repeat(3, 1fr)"},gap:3},children:a&&0===t.length?Array.from({length:6}).map(((t,e)=>(0,g.jsx)(f.pL,{loading:!0},e))):t.map((t=>(0,g.jsxs)(f.pL,{title:t.name,subtitle:t.description,onClick:()=>console.log("View strategy:",t.id),children:[(0,g.jsx)(n.A,{sx:{display:"flex",justifyContent:"space-between",alignItems:"center",mb:2},children:(0,g.jsx)(f.P5,{status:t.status})}),(0,g.jsx)(s.A,{sx:{my:2}}),(0,g.jsxs)(n.A,{sx:{display:"flex",justifyContent:"space-between",alignItems:"center"},children:[(0,g.jsxs)(i.A,{variant:"caption",color:"text.secondary",children:["Last updated: ",t.lastUpdated]}),(0,g.jsx)(c.A,{size:"small",color:"primary",children:"View Details"})]})]},t.id)))}),!a&&0===t.length&&!h&&(0,g.jsx)(n.A,{sx:{mt:4},children:(0,g.jsx)(f.pp,{title:"No Strategies Found",description:"Get started by creating your first strategy",actionLabel:"Create Strategy",onAction:w,icon:(0,g.jsx)(d.A,{})})}),(0,g.jsx)(f.p8,{loading:a&&t.length>0,variant:"inline"})]})}}}]);
//# sourceMappingURL=961.827e23ed.chunk.js.map