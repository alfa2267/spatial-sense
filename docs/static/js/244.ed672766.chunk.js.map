{"version":3,"file":"static/js/244.ed672766.chunk.js","mappings":"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","sources":["components/layout/PageContainer.tsx","components/layout/PageHeader.tsx","components/layout/FilterBar.tsx","components/ui/StatusChip.tsx","components/ui/EmptyState.tsx","components/ui/LoadingOverlay.tsx","components/ui/DataCard.tsx","components/Sidebar.tsx","../node_modules/@mui/material/esm/Alert/alertClasses.js","../node_modules/@mui/material/esm/internal/svg-icons/SuccessOutlined.js","../node_modules/@mui/material/esm/internal/svg-icons/ReportProblemOutlined.js","../node_modules/@mui/material/esm/internal/svg-icons/ErrorOutline.js","../node_modules/@mui/material/esm/internal/svg-icons/InfoOutlined.js","../node_modules/@mui/material/esm/internal/svg-icons/Close.js","../node_modules/@mui/material/esm/Alert/Alert.js"],"sourcesContent":["import React from 'react';\nimport { Box, BoxProps } from '@mui/material';\n\ninterface PageContainerProps extends BoxProps {\n  children: React.ReactNode;\n  maxWidth?: string | number;\n  fullHeight?: boolean;\n}\n\nexport const PageContainer: React.FC<PageContainerProps> = ({\n  children,\n  maxWidth = '100%',\n  fullHeight = true,\n  sx,\n  ...props\n}) => {\n  return (\n    <Box\n      sx={{\n        height: fullHeight ? '100%' : 'auto',\n        display: 'flex',\n        flexDirection: 'column',\n        maxWidth,\n        ...sx,\n      }}\n      {...props}\n    >\n      {children}\n    </Box>\n  );\n};\n\nexport default PageContainer;","import React from 'react';\nimport { Box, Typography, Button, Skeleton } from '@mui/material';\nimport { Add as AddIcon } from '@mui/icons-material';\n\ninterface ActionButton {\n  label: string;\n  onClick?: (event?: React.MouseEvent<HTMLButtonElement>) => void;\n  icon?: React.ReactNode;\n  variant?: 'contained' | 'outlined' | 'text';\n  color?: 'primary' | 'secondary' | 'error' | 'warning' | 'info' | 'success';\n  disabled?: boolean;\n  loading?: boolean;\n}\n\ninterface PageHeaderProps {\n  title: string;\n  subtitle?: string;\n  actions?: ActionButton[];\n  loading?: boolean;\n}\n\nexport const PageHeader: React.FC<PageHeaderProps> = ({\n  title,\n  subtitle,\n  actions = [],\n  loading = false,\n}) => {\n  if (loading) {\n    return (\n      <Box\n        display=\"flex\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        mb={2}\n        sx={{\n          py: 1.5,\n          px: 2,\n        }}\n      >\n        <Box>\n          <Skeleton variant=\"text\" width={200} height={40} />\n          {subtitle && <Skeleton variant=\"text\" width={300} height={20} sx={{ mt: 0.5 }} />}\n        </Box>\n        <Skeleton variant=\"rectangular\" width={120} height={40} sx={{ borderRadius: 2 }} />\n      </Box>\n    );\n  }\n\n  return (\n    <Box\n      display=\"flex\"\n      justifyContent=\"space-between\"\n      alignItems=\"center\"\n      mb={2}\n      sx={{\n        py: 1.5,\n        px: 2,\n      }}\n    >\n      <Box>\n        <Typography \n          variant=\"h4\" \n          component=\"h1\" \n          sx={{ \n            fontWeight: 600, \n            color: 'text.primary' \n          }}\n        >\n          {title}\n        </Typography>\n        {subtitle && (\n          <Typography \n            variant=\"body2\" \n            color=\"text.secondary\" \n            sx={{ mt: 0.5 }}\n          >\n            {subtitle}\n          </Typography>\n        )}\n      </Box>\n      \n      {actions.length > 0 && (\n        <Box sx={{ display: 'flex', gap: 1 }}>\n          {actions.map((action, index) => (\n            <Button\n              key={index}\n              variant={action.variant || 'contained'}\n              color={action.color || 'primary'}\n              startIcon={action.icon || (action.variant === 'contained' ? <AddIcon /> : undefined)}\n              onClick={(e) => action.onClick?.(e)}\n              disabled={action.disabled || action.loading}\n              sx={{\n                borderRadius: 2,\n                py: 1.5,\n                px: 3,\n                boxShadow: action.variant === 'contained' ? '0 2px 8px rgba(0,0,0,0.1)' : 'none',\n                '&:hover': {\n                  boxShadow: action.variant === 'contained' ? '0 4px 12px rgba(0,0,0,0.15)' : 'none',\n                }\n              }}\n            >\n              {action.label}\n            </Button>\n          ))}\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport default PageHeader;","import React from 'react';\nimport {\n  Paper,\n  Grid,\n  TextField,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  InputAdornment,\n  Typography,\n  Skeleton,\n} from '@mui/material';\nimport { Search as SearchIcon } from '@mui/icons-material';\n\ninterface FilterOption {\n  value: string;\n  label: string;\n}\n\ninterface Filter {\n  id: string;\n  label: string;\n  value: string;\n  onChange: (value: string) => void;\n  options: FilterOption[];\n  size?: number; // Grid size\n}\n\ninterface FilterBarProps {\n  searchTerm?: string;\n  onSearchChange?: (value: string) => void;\n  searchPlaceholder?: string;\n  filters?: Filter[];\n  resultCount?: number;\n  resultLabel?: string;\n  loading?: boolean;\n}\n\nexport const FilterBar: React.FC<FilterBarProps> = ({\n  searchTerm = '',\n  onSearchChange,\n  searchPlaceholder = 'Search...',\n  filters = [],\n  resultCount,\n  resultLabel = 'items',\n  loading = false,\n}) => {\n  if (loading) {\n    return (\n      <Paper sx={{ p: 2, mb: 2, borderRadius: 1 }}>\n        <Grid container spacing={2} alignItems=\"center\">\n          <Grid size={{ xs: 12, md: 4 }}>\n            <Skeleton variant=\"rectangular\" height={56} sx={{ borderRadius: 1 }} />\n          </Grid>\n          {Array.from({ length: 3 }).map((_, index) => (\n            <Grid key={index} size={{ xs: 12, md: 3 }}>\n              <Skeleton variant=\"rectangular\" height={56} sx={{ borderRadius: 1 }} />\n            </Grid>\n          ))}\n        </Grid>\n      </Paper>\n    );\n  }\n\n  // Calculate grid sizes dynamically\n  const hasSearch = !!onSearchChange;\n  const filterCount = filters.length;\n  const totalElements = (hasSearch ? 1 : 0) + filterCount + (resultCount !== undefined ? 1 : 0);\n  \n  const getGridSize = (index: number) => {\n    if (totalElements <= 2) return { xs: 12, md: 6 };\n    if (totalElements === 3) return { xs: 12, md: 4 };\n    if (totalElements === 4) return { xs: 12, md: 3 };\n    return { xs: 12, md: 2 };\n  };\n\n  return (\n    <Paper sx={{ p: 2, mb: 2, borderRadius: 1 }}>\n      <Grid container spacing={2} alignItems=\"center\">\n        {/* Search Field */}\n        {onSearchChange && (\n          <Grid size={getGridSize(0)}>\n            <TextField\n              fullWidth\n              placeholder={searchPlaceholder}\n              value={searchTerm}\n              onChange={(e) => onSearchChange(e.target.value)}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <SearchIcon />\n                  </InputAdornment>\n                ),\n              }}\n            />\n          </Grid>\n        )}\n\n        {/* Filters */}\n        {filters.map((filter, index) => (\n          <Grid key={filter.id} size={filter.size ? { xs: 12, md: filter.size } : getGridSize(index + (hasSearch ? 1 : 0))}>\n            <FormControl fullWidth>\n              <InputLabel>{filter.label}</InputLabel>\n              <Select\n                value={filter.value}\n                label={filter.label}\n                onChange={(e) => filter.onChange(e.target.value)}\n              >\n                {filter.options.map((option) => (\n                  <MenuItem key={option.value} value={option.value}>\n                    {option.label}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </Grid>\n        ))}\n\n        {/* Result Count */}\n        {resultCount !== undefined && (\n          <Grid size={getGridSize(totalElements - 1)}>\n            <Typography variant=\"body2\" color=\"textSecondary\">\n              {resultCount} {resultLabel}\n            </Typography>\n          </Grid>\n        )}\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default FilterBar;","import React from 'react';\nimport { Chip, ChipProps } from '@mui/material';\n\ntype StatusVariant = 'active' | 'inactive' | 'pending' | 'completed' | 'draft' | 'archived' | 'error' | 'warning' | 'success' | 'info';\n\ninterface StatusChipProps extends Omit<ChipProps, 'color'> {\n  status: StatusVariant;\n  customColors?: Record<string, { bg: string; color: string }>;\n}\n\nconst defaultStatusColors: Record<StatusVariant, { bg: string; color: string }> = {\n  active: { bg: 'success.light', color: 'success.dark' },\n  inactive: { bg: 'grey.300', color: 'grey.800' },\n  pending: { bg: 'warning.light', color: 'warning.dark' },\n  completed: { bg: 'success.light', color: 'success.dark' },\n  draft: { bg: 'info.light', color: 'info.dark' },\n  archived: { bg: 'grey.500', color: 'common.white' },\n  error: { bg: 'error.light', color: 'error.dark' },\n  warning: { bg: 'warning.light', color: 'warning.dark' },\n  success: { bg: 'success.light', color: 'success.dark' },\n  info: { bg: 'info.light', color: 'info.dark' },\n};\n\nexport const StatusChip: React.FC<StatusChipProps> = ({\n  status,\n  customColors,\n  sx,\n  ...props\n}) => {\n  const colors = customColors?.[status] || defaultStatusColors[status] || defaultStatusColors.info;\n\n  return (\n    <Chip\n      label={status.charAt(0).toUpperCase() + status.slice(1)}\n      size=\"small\"\n      sx={{\n        bgcolor: colors.bg,\n        color: colors.color,\n        fontWeight: 'bold',\n        textTransform: 'capitalize',\n        '& .MuiChip-label': {\n          px: 1.5,\n        },\n        ...sx,\n      }}\n      {...props}\n    />\n  );\n};\n\nexport default StatusChip;","import React from 'react';\nimport { Box, Typography, Button, Paper } from '@mui/material';\nimport { Add as AddIcon, Inbox as InboxIcon } from '@mui/icons-material';\n\ninterface EmptyStateProps {\n  title: string;\n  description?: string;\n  icon?: React.ReactNode;\n  actionLabel?: string;\n  onAction?: (event?: React.MouseEvent<HTMLButtonElement>) => void;\n  actionIcon?: React.ReactNode;\n  variant?: 'paper' | 'box';\n  size?: 'small' | 'medium' | 'large';\n}\n\nexport const EmptyState: React.FC<EmptyStateProps> = ({\n  title,\n  description,\n  icon,\n  actionLabel,\n  onAction,\n  actionIcon,\n  variant = 'paper',\n  size = 'medium',\n}) => {\n  const sizeConfig = {\n    small: { p: 2, iconSize: 40, titleVariant: 'h6' as const, spacing: 1 },\n    medium: { p: 4, iconSize: 60, titleVariant: 'h5' as const, spacing: 2 },\n    large: { p: 6, iconSize: 80, titleVariant: 'h4' as const, spacing: 3 },\n  };\n\n  const config = sizeConfig[size];\n\n  const content = (\n    <Box sx={{ textAlign: 'center', p: config.p }}>\n      {/* Icon */}\n      <Box\n        sx={{\n          mb: config.spacing,\n          color: 'text.disabled',\n          '& > *': {\n            fontSize: config.iconSize,\n          },\n        }}\n      >\n        {icon || <InboxIcon fontSize=\"inherit\" />}\n      </Box>\n\n      {/* Title */}\n      <Typography \n        variant={config.titleVariant} \n        gutterBottom\n        sx={{ \n          fontWeight: 600,\n          color: 'text.secondary',\n          mb: description ? 1 : config.spacing\n        }}\n      >\n        {title}\n      </Typography>\n\n      {/* Description */}\n      {description && (\n        <Typography \n          variant=\"body1\" \n          color=\"text.secondary\" \n          sx={{ mb: config.spacing }}\n        >\n          {description}\n        </Typography>\n      )}\n\n      {/* Action Button */}\n      {actionLabel && onAction && (\n        <Button\n          variant=\"contained\"\n          startIcon={actionIcon || <AddIcon />}\n          onClick={(e) => onAction?.(e)}\n          sx={{\n            borderRadius: 2,\n            py: 1.5,\n            px: 3,\n          }}\n        >\n          {actionLabel}\n        </Button>\n      )}\n    </Box>\n  );\n\n  if (variant === 'paper') {\n    return <Paper>{content}</Paper>;\n  }\n\n  return content;\n};\n\nexport default EmptyState;","import React from 'react';\nimport { Box, CircularProgress, Typography, Backdrop, Portal } from '@mui/material';\n\ninterface LoadingOverlayProps {\n  loading: boolean;\n  message?: string;\n  variant?: 'overlay' | 'inline' | 'backdrop';\n  size?: number;\n}\n\nexport const LoadingOverlay: React.FC<LoadingOverlayProps> = ({\n  loading,\n  message,\n  variant = 'overlay',\n  size = 40,\n}) => {\n  if (!loading) return null;\n\n  const loadingContent = (\n    <Box\n      display=\"flex\"\n      flexDirection=\"column\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      gap={2}\n    >\n      <CircularProgress size={size} />\n      {message && (\n        <Typography variant=\"body2\" color=\"text.secondary\">\n          {message}\n        </Typography>\n      )}\n    </Box>\n  );\n\n  switch (variant) {\n    case 'backdrop':\n      return (\n        <Portal>\n          <Backdrop\n            open={loading}\n            sx={{\n              color: '#fff',\n              zIndex: (theme) => theme.zIndex.drawer + 1,\n              bgcolor: 'rgba(0, 0, 0, 0.5)',\n            }}\n          >\n            {loadingContent}\n          </Backdrop>\n        </Portal>\n      );\n\n    case 'overlay':\n      return (\n        <Box\n          position=\"fixed\"\n          top={0}\n          left={0}\n          width=\"100%\"\n          height=\"100%\"\n          bgcolor=\"rgba(0, 0, 0, 0.5)\"\n          display=\"flex\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          zIndex={9999}\n        >\n          {loadingContent}\n        </Box>\n      );\n\n    case 'inline':\n    default:\n      return (\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          p={4}\n        >\n          {loadingContent}\n        </Box>\n      );\n  }\n};\n\nexport default LoadingOverlay;","import React from 'react';\nimport { Card, CardContent, CardActions, Box, Typography, Skeleton } from '@mui/material';\n\ninterface DataCardProps {\n  title?: string;\n  subtitle?: string;\n  children?: React.ReactNode;\n  actions?: React.ReactNode;\n  loading?: boolean;\n  onClick?: () => void;\n  selected?: boolean;\n  variant?: 'elevation' | 'outlined';\n  size?: 'small' | 'medium' | 'large';\n}\n\nexport const DataCard: React.FC<DataCardProps> = ({\n  title,\n  subtitle,\n  children,\n  actions,\n  loading = false,\n  onClick,\n  selected = false,\n  variant = 'elevation',\n  size = 'medium',\n}) => {\n  const sizeConfig = {\n    small: { p: 1.5, spacing: 1 },\n    medium: { p: 2, spacing: 1.5 },\n    large: { p: 3, spacing: 2 },\n  };\n\n  const config = sizeConfig[size];\n\n  if (loading) {\n    return (\n      <Card \n        variant={variant}\n        sx={{\n          height: '100%',\n          display: 'flex',\n          flexDirection: 'column',\n        }}\n      >\n        <CardContent sx={{ p: config.p, flexGrow: 1 }}>\n          <Skeleton variant=\"text\" width=\"60%\" height={28} />\n          <Skeleton variant=\"text\" width=\"80%\" height={20} sx={{ mt: 0.5 }} />\n          <Box sx={{ mt: config.spacing }}>\n            <Skeleton variant=\"rectangular\" height={60} />\n          </Box>\n        </CardContent>\n        {actions && (\n          <CardActions sx={{ p: config.p, pt: 0 }}>\n            <Skeleton variant=\"rectangular\" width={80} height={32} />\n          </CardActions>\n        )}\n      </Card>\n    );\n  }\n\n  return (\n    <Card\n      variant={variant}\n      sx={{\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        cursor: onClick ? 'pointer' : 'default',\n        border: selected ? '2px solid' : undefined,\n        borderColor: selected ? 'primary.main' : undefined,\n        transition: 'all 0.2s ease-in-out',\n        '&:hover': onClick ? {\n          transform: 'translateY(-2px)',\n          boxShadow: (theme) => theme.shadows[4],\n        } : {},\n      }}\n      onClick={onClick}\n    >\n      <CardContent sx={{ p: config.p, flexGrow: 1 }}>\n        {/* Header */}\n        {(title || subtitle) && (\n          <Box sx={{ mb: config.spacing }}>\n            {title && (\n              <Typography \n                variant=\"h6\" \n                component=\"h3\"\n                sx={{ \n                  fontWeight: 600,\n                  lineHeight: 1.2,\n                  mb: subtitle ? 0.5 : 0\n                }}\n              >\n                {title}\n              </Typography>\n            )}\n            {subtitle && (\n              <Typography \n                variant=\"body2\" \n                color=\"text.secondary\"\n                sx={{ lineHeight: 1.4 }}\n              >\n                {subtitle}\n              </Typography>\n            )}\n          </Box>\n        )}\n\n        {/* Content */}\n        {children}\n      </CardContent>\n\n      {/* Actions */}\n      {actions && (\n        <CardActions sx={{ p: config.p, pt: 0 }}>\n          {actions}\n        </CardActions>\n      )}\n    </Card>\n  );\n};\n\nexport default DataCard;","import { FC } from 'react';\nimport { List, ListItem, ListItemButton, ListItemIcon, ListItemText, Divider, Box, Typography } from '@mui/material';\nimport { Link as RouterLink, useLocation } from 'react-router-dom';\nimport DashboardIcon from '@mui/icons-material/Dashboard';\nimport PeopleIcon from '@mui/icons-material/People';\nimport AssessmentIcon from '@mui/icons-material/Assessment';\nimport PsychologyIcon from '@mui/icons-material/Psychology';\nimport LightbulbIcon from '@mui/icons-material/Lightbulb';\nimport MapIcon from '@mui/icons-material/Map';\nimport TimelineIcon from '@mui/icons-material/Timeline';\nimport ReceiptIcon from '@mui/icons-material/Receipt';\nimport SettingsIcon from '@mui/icons-material/Settings';\nimport { styled } from '@mui/material/styles';\nimport React from 'react';\n\ninterface SidebarProps {\n  onClose?: () => void;\n}\n\nconst StyledNavItem = styled(ListItem)(({ theme }) => ({\n  '&.Mui-selected': {\n    backgroundColor: theme.palette.action.selected,\n    '&:hover': {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n  '&:hover': {\n    backgroundColor: theme.palette.action.hover,\n  },\n  borderRadius: theme.shape.borderRadius,\n  margin: theme.spacing(0.5, 1.5),\n  padding: theme.spacing(1, 2),\n  width: 'auto',\n}));\n\nconst StyledNavItemIcon = styled(ListItemIcon)({\n  minWidth: 40,\n  color: 'inherit',\n});\n\nconst NavSection: FC<{ title: string }> = ({ title }) => (\n  <Box sx={{ px: 2, py: 1.5 }}>\n    <Typography variant=\"overline\" color=\"text.secondary\" fontWeight=\"medium\">\n      {title}\n    </Typography>\n  </Box>\n);\n\nconst navItems = [\n  { text: 'Overview', icon: <DashboardIcon />, path: '/' },\n  { text: 'Clients', icon: <PeopleIcon />, path: '/clients' },\n  { text: 'Reports', icon: <AssessmentIcon />, path: '/reports' },\n];\n\nconst analysisItems = [\n  { text: 'AI Analysis', icon: <PsychologyIcon />, path: '/analysis' },\n  { text: 'Automation Strategy', icon: <LightbulbIcon />, path: '/strategy' },\n  { text: 'Floor Map', icon: <MapIcon />, path: '/floorplan' },\n];\n\nconst otherItems = [\n  { text: 'Timeline', icon: <TimelineIcon />, path: '/timeline' },\n  { text: 'Invoicing', icon: <ReceiptIcon />, path: '/invoicing' },\n  { text: 'Settings', icon: <SettingsIcon />, path: '/settings' },\n];\n\nexport const Sidebar: FC<SidebarProps> = ({ onClose }) => {\n  const location = useLocation();\n\n  const renderNavItems = (items: typeof navItems) =>\n    items.map((item) => (\n      <ListItem key={item.path} disablePadding>\n        <ListItemButton\n          component={RouterLink}\n          to={item.path}\n          selected={location.pathname === item.path}\n          onClick={onClose}\n          sx={{\n            '&.Mui-selected': {\n              backgroundColor: 'action.selected',\n              '&:hover': {\n                backgroundColor: 'action.hover',\n              },\n            },\n            '&:hover': {\n              backgroundColor: 'action.hover',\n            },\n          }}\n        >\n          <StyledNavItemIcon>{item.icon}</StyledNavItemIcon>\n          <ListItemText primary={item.text} />\n        </ListItemButton>\n      </ListItem>\n    ));\n\n  return (\n    <Box sx={{ width: 240 }} role=\"presentation\">\n      <Box sx={{ p: 2, display: 'flex', alignItems: 'center' }}>\n        <Typography variant=\"h6\" component=\"h1\" sx={{ fontWeight: 700 }}>\n          SSP\n        </Typography>\n      </Box>\n      \n      <List>\n        <NavSection title=\"Dashboard\" />\n        {renderNavItems(navItems)}\n        \n        <NavSection title=\"Analysis\" />\n        {renderNavItems(analysisItems)}\n        \n        <NavSection title=\"Other\" />\n        {renderNavItems(otherItems)}\n      </List>\n    </Box>\n  );\n};\n\nexport default Sidebar;\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getAlertUtilityClass(slot) {\n  return generateUtilityClass('MuiAlert', slot);\n}\nconst alertClasses = generateUtilityClasses('MuiAlert', ['root', 'action', 'icon', 'message', 'filled', 'colorSuccess', 'colorInfo', 'colorWarning', 'colorError', 'filledSuccess', 'filledInfo', 'filledWarning', 'filledError', 'outlined', 'outlinedSuccess', 'outlinedInfo', 'outlinedWarning', 'outlinedError', 'standard', 'standardSuccess', 'standardInfo', 'standardWarning', 'standardError']);\nexport default alertClasses;","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from \"../../utils/createSvgIcon.js\";\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4C12.76,4 13.5,4.11 14.2, 4.31L15.77,2.74C14.61,2.26 13.34,2 12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0, 0 22,12M7.91,10.08L6.5,11.5L11,16L21,6L19.59,4.58L11,13.17L7.91,10.08Z\"\n}), 'SuccessOutlined');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from \"../../utils/createSvgIcon.js\";\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 5.99L19.53 19H4.47L12 5.99M12 2L1 21h22L12 2zm1 14h-2v2h2v-2zm0-6h-2v4h2v-4z\"\n}), 'ReportProblemOutlined');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from \"../../utils/createSvgIcon.js\";\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'ErrorOutline');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from \"../../utils/createSvgIcon.js\";\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20, 12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10, 10 0 0,0 12,2M11,17H13V11H11V17Z\"\n}), 'InfoOutlined');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from \"../../utils/createSvgIcon.js\";\n\n/**\n * @ignore - internal component.\n *\n * Alias to `Clear`.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { darken, lighten } from '@mui/system/colorManipulator';\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport useSlot from \"../utils/useSlot.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport createSimplePaletteValueFilter from \"../utils/createSimplePaletteValueFilter.js\";\nimport Paper from \"../Paper/index.js\";\nimport alertClasses, { getAlertUtilityClass } from \"./alertClasses.js\";\nimport IconButton from \"../IconButton/index.js\";\nimport SuccessOutlinedIcon from \"../internal/svg-icons/SuccessOutlined.js\";\nimport ReportProblemOutlinedIcon from \"../internal/svg-icons/ReportProblemOutlined.js\";\nimport ErrorOutlineIcon from \"../internal/svg-icons/ErrorOutline.js\";\nimport InfoOutlinedIcon from \"../internal/svg-icons/InfoOutlined.js\";\nimport CloseIcon from \"../internal/svg-icons/Close.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    variant,\n    color,\n    severity,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', `color${capitalize(color || severity)}`, `${variant}${capitalize(color || severity)}`, `${variant}`],\n    icon: ['icon'],\n    message: ['message'],\n    action: ['action']\n  };\n  return composeClasses(slots, getAlertUtilityClass, classes);\n};\nconst AlertRoot = styled(Paper, {\n  name: 'MuiAlert',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`${ownerState.variant}${capitalize(ownerState.color || ownerState.severity)}`]];\n  }\n})(memoTheme(({\n  theme\n}) => {\n  const getColor = theme.palette.mode === 'light' ? darken : lighten;\n  const getBackgroundColor = theme.palette.mode === 'light' ? lighten : darken;\n  return {\n    ...theme.typography.body2,\n    backgroundColor: 'transparent',\n    display: 'flex',\n    padding: '6px 16px',\n    variants: [...Object.entries(theme.palette).filter(createSimplePaletteValueFilter(['light'])).map(([color]) => ({\n      props: {\n        colorSeverity: color,\n        variant: 'standard'\n      },\n      style: {\n        color: theme.vars ? theme.vars.palette.Alert[`${color}Color`] : getColor(theme.palette[color].light, 0.6),\n        backgroundColor: theme.vars ? theme.vars.palette.Alert[`${color}StandardBg`] : getBackgroundColor(theme.palette[color].light, 0.9),\n        [`& .${alertClasses.icon}`]: theme.vars ? {\n          color: theme.vars.palette.Alert[`${color}IconColor`]\n        } : {\n          color: theme.palette[color].main\n        }\n      }\n    })), ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter(['light'])).map(([color]) => ({\n      props: {\n        colorSeverity: color,\n        variant: 'outlined'\n      },\n      style: {\n        color: theme.vars ? theme.vars.palette.Alert[`${color}Color`] : getColor(theme.palette[color].light, 0.6),\n        border: `1px solid ${(theme.vars || theme).palette[color].light}`,\n        [`& .${alertClasses.icon}`]: theme.vars ? {\n          color: theme.vars.palette.Alert[`${color}IconColor`]\n        } : {\n          color: theme.palette[color].main\n        }\n      }\n    })), ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter(['dark'])).map(([color]) => ({\n      props: {\n        colorSeverity: color,\n        variant: 'filled'\n      },\n      style: {\n        fontWeight: theme.typography.fontWeightMedium,\n        ...(theme.vars ? {\n          color: theme.vars.palette.Alert[`${color}FilledColor`],\n          backgroundColor: theme.vars.palette.Alert[`${color}FilledBg`]\n        } : {\n          backgroundColor: theme.palette.mode === 'dark' ? theme.palette[color].dark : theme.palette[color].main,\n          color: theme.palette.getContrastText(theme.palette[color].main)\n        })\n      }\n    }))]\n  };\n}));\nconst AlertIcon = styled('div', {\n  name: 'MuiAlert',\n  slot: 'Icon'\n})({\n  marginRight: 12,\n  padding: '7px 0',\n  display: 'flex',\n  fontSize: 22,\n  opacity: 0.9\n});\nconst AlertMessage = styled('div', {\n  name: 'MuiAlert',\n  slot: 'Message'\n})({\n  padding: '8px 0',\n  minWidth: 0,\n  overflow: 'auto'\n});\nconst AlertAction = styled('div', {\n  name: 'MuiAlert',\n  slot: 'Action'\n})({\n  display: 'flex',\n  alignItems: 'flex-start',\n  padding: '4px 0 0 16px',\n  marginLeft: 'auto',\n  marginRight: -8\n});\nconst defaultIconMapping = {\n  success: /*#__PURE__*/_jsx(SuccessOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  warning: /*#__PURE__*/_jsx(ReportProblemOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  error: /*#__PURE__*/_jsx(ErrorOutlineIcon, {\n    fontSize: \"inherit\"\n  }),\n  info: /*#__PURE__*/_jsx(InfoOutlinedIcon, {\n    fontSize: \"inherit\"\n  })\n};\nconst Alert = /*#__PURE__*/React.forwardRef(function Alert(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiAlert'\n  });\n  const {\n    action,\n    children,\n    className,\n    closeText = 'Close',\n    color,\n    components = {},\n    componentsProps = {},\n    icon,\n    iconMapping = defaultIconMapping,\n    onClose,\n    role = 'alert',\n    severity = 'success',\n    slotProps = {},\n    slots = {},\n    variant = 'standard',\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    color,\n    severity,\n    variant,\n    colorSeverity: color || severity\n  };\n  const classes = useUtilityClasses(ownerState);\n  const externalForwardedProps = {\n    slots: {\n      closeButton: components.CloseButton,\n      closeIcon: components.CloseIcon,\n      ...slots\n    },\n    slotProps: {\n      ...componentsProps,\n      ...slotProps\n    }\n  };\n  const [RootSlot, rootSlotProps] = useSlot('root', {\n    ref,\n    shouldForwardComponentProp: true,\n    className: clsx(classes.root, className),\n    elementType: AlertRoot,\n    externalForwardedProps: {\n      ...externalForwardedProps,\n      ...other\n    },\n    ownerState,\n    additionalProps: {\n      role,\n      elevation: 0\n    }\n  });\n  const [IconSlot, iconSlotProps] = useSlot('icon', {\n    className: classes.icon,\n    elementType: AlertIcon,\n    externalForwardedProps,\n    ownerState\n  });\n  const [MessageSlot, messageSlotProps] = useSlot('message', {\n    className: classes.message,\n    elementType: AlertMessage,\n    externalForwardedProps,\n    ownerState\n  });\n  const [ActionSlot, actionSlotProps] = useSlot('action', {\n    className: classes.action,\n    elementType: AlertAction,\n    externalForwardedProps,\n    ownerState\n  });\n  const [CloseButtonSlot, closeButtonProps] = useSlot('closeButton', {\n    elementType: IconButton,\n    externalForwardedProps,\n    ownerState\n  });\n  const [CloseIconSlot, closeIconProps] = useSlot('closeIcon', {\n    elementType: CloseIcon,\n    externalForwardedProps,\n    ownerState\n  });\n  return /*#__PURE__*/_jsxs(RootSlot, {\n    ...rootSlotProps,\n    children: [icon !== false ? /*#__PURE__*/_jsx(IconSlot, {\n      ...iconSlotProps,\n      children: icon || iconMapping[severity] || defaultIconMapping[severity]\n    }) : null, /*#__PURE__*/_jsx(MessageSlot, {\n      ...messageSlotProps,\n      children: children\n    }), action != null ? /*#__PURE__*/_jsx(ActionSlot, {\n      ...actionSlotProps,\n      children: action\n    }) : null, action == null && onClose ? /*#__PURE__*/_jsx(ActionSlot, {\n      ...actionSlotProps,\n      children: /*#__PURE__*/_jsx(CloseButtonSlot, {\n        size: \"small\",\n        \"aria-label\": closeText,\n        title: closeText,\n        color: \"inherit\",\n        onClick: onClose,\n        ...closeButtonProps,\n        children: /*#__PURE__*/_jsx(CloseIconSlot, {\n          fontSize: \"small\",\n          ...closeIconProps\n        })\n      })\n    }) : null]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Alert.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The action to display. It renders after the message, at the end of the alert.\n   */\n  action: PropTypes.node,\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * Override the default label for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).\n   * @default 'Close'\n   */\n  closeText: PropTypes.string,\n  /**\n   * The color of the component. Unless provided, the value is taken from the `severity` prop.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The components used for each slot inside.\n   *\n   * @deprecated use the `slots` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   *\n   * @default {}\n   */\n  components: PropTypes.shape({\n    CloseButton: PropTypes.elementType,\n    CloseIcon: PropTypes.elementType\n  }),\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * @deprecated use the `slotProps` prop instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   *\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    closeButton: PropTypes.object,\n    closeIcon: PropTypes.object\n  }),\n  /**\n   * Override the icon displayed before the children.\n   * Unless provided, the icon is mapped to the value of the `severity` prop.\n   * Set to `false` to remove the `icon`.\n   */\n  icon: PropTypes.node,\n  /**\n   * The component maps the `severity` prop to a range of different icons,\n   * for instance success to `<SuccessOutlined>`.\n   * If you wish to change this mapping, you can provide your own.\n   * Alternatively, you can use the `icon` prop to override the icon displayed.\n   */\n  iconMapping: PropTypes.shape({\n    error: PropTypes.node,\n    info: PropTypes.node,\n    success: PropTypes.node,\n    warning: PropTypes.node\n  }),\n  /**\n   * Callback fired when the component requests to be closed.\n   * When provided and no `action` prop is set, a close icon button is displayed that triggers the callback when clicked.\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n  /**\n   * The ARIA role attribute of the element.\n   * @default 'alert'\n   */\n  role: PropTypes.string,\n  /**\n   * The severity of the alert. This defines the color and icon used.\n   * @default 'success'\n   */\n  severity: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    action: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    closeButton: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    closeIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    icon: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    message: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    action: PropTypes.elementType,\n    closeButton: PropTypes.elementType,\n    closeIcon: PropTypes.elementType,\n    icon: PropTypes.elementType,\n    message: PropTypes.elementType,\n    root: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'standard'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['filled', 'outlined', 'standard']), PropTypes.string])\n} : void 0;\nexport default Alert;"],"names":["PageContainer","_ref","children","maxWidth","fullHeight","sx","props","_objectWithoutProperties","_excluded","_jsx","Box","_objectSpread","height","display","flexDirection","PageHeader","title","subtitle","actions","loading","_jsxs","justifyContent","alignItems","mb","py","px","Skeleton","variant","width","mt","borderRadius","Typography","component","fontWeight","color","length","gap","map","action","index","Button","startIcon","icon","AddIcon","undefined","onClick","e","_action$onClick","call","disabled","boxShadow","label","FilterBar","searchTerm","onSearchChange","searchPlaceholder","filters","resultCount","resultLabel","Paper","p","Grid","container","spacing","size","xs","md","Array","from","_","hasSearch","filterCount","totalElements","getGridSize","TextField","fullWidth","placeholder","value","onChange","target","InputProps","startAdornment","InputAdornment","position","SearchIcon","filter","FormControl","InputLabel","Select","options","option","MenuItem","id","defaultStatusColors","active","bg","inactive","pending","completed","draft","archived","error","warning","success","info","StatusChip","status","customColors","colors","Chip","charAt","toUpperCase","slice","bgcolor","textTransform","EmptyState","description","actionLabel","onAction","actionIcon","config","small","iconSize","titleVariant","medium","large","content","textAlign","fontSize","InboxIcon","gutterBottom","LoadingOverlay","message","loadingContent","CircularProgress","Portal","Backdrop","open","zIndex","theme","drawer","top","left","DataCard","selected","Card","CardContent","flexGrow","CardActions","pt","cursor","border","borderColor","transition","transform","shadows","lineHeight","styled","ListItem","backgroundColor","palette","hover","shape","margin","padding","ListItemIcon","minWidth","DashboardIcon","PeopleIcon","AssessmentIcon","PsychologyIcon","LightbulbIcon","MapIcon","TimelineIcon","ReceiptIcon","SettingsIcon","getAlertUtilityClass","slot","generateUtilityClass","generateUtilityClasses","createSvgIcon","d","AlertRoot","name","overridesResolver","styles","ownerState","root","concat","capitalize","severity","memoTheme","getColor","mode","darken","lighten","getBackgroundColor","typography","body2","variants","Object","entries","createSimplePaletteValueFilter","_ref2","colorSeverity","style","vars","Alert","light","alertClasses","main","_ref3","_ref4","fontWeightMedium","dark","getContrastText","AlertIcon","marginRight","opacity","AlertMessage","overflow","AlertAction","marginLeft","defaultIconMapping","SuccessOutlinedIcon","ReportProblemOutlinedIcon","ErrorOutlineIcon","InfoOutlinedIcon","React","inProps","ref","useDefaultProps","className","closeText","components","componentsProps","iconMapping","onClose","role","slotProps","slots","other","classes","composeClasses","useUtilityClasses","externalForwardedProps","closeButton","CloseButton","closeIcon","CloseIcon","RootSlot","rootSlotProps","useSlot","shouldForwardComponentProp","clsx","elementType","additionalProps","elevation","IconSlot","iconSlotProps","MessageSlot","messageSlotProps","ActionSlot","actionSlotProps","CloseButtonSlot","closeButtonProps","IconButton","CloseIconSlot","closeIconProps"],"sourceRoot":""}