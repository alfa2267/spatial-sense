{"version":3,"file":"static/js/605.75b0a867.chunk.js","mappings":"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","sources":["components/layout/PageContainer.tsx","components/layout/PageHeader.tsx","components/layout/FilterBar.tsx","components/ui/StatusChip.tsx","components/ui/EmptyState.tsx","components/ui/LoadingOverlay.tsx","components/ui/DataCard.tsx","components/Sidebar.tsx","pages/DashboardPage/StatCard.tsx","pages/DashboardPage/ProjectStatusChart.tsx","pages/DashboardPage/RevenueChart.tsx","pages/DashboardPage/RecentActivities.tsx","pages/DashboardPage/DashboardPage.tsx"],"sourcesContent":["import React from 'react';\nimport { Box, BoxProps } from '@mui/material';\n\ninterface PageContainerProps extends BoxProps {\n  children: React.ReactNode;\n  maxWidth?: string | number;\n  fullHeight?: boolean;\n}\n\nexport const PageContainer: React.FC<PageContainerProps> = ({\n  children,\n  maxWidth = '100%',\n  fullHeight = true,\n  sx,\n  ...props\n}) => {\n  return (\n    <Box\n      sx={{\n        height: fullHeight ? '100%' : 'auto',\n        display: 'flex',\n        flexDirection: 'column',\n        maxWidth,\n        ...sx,\n      }}\n      {...props}\n    >\n      {children}\n    </Box>\n  );\n};\n\nexport default PageContainer;","import React from 'react';\nimport { Box, Typography, Button, Skeleton } from '@mui/material';\nimport { Add as AddIcon } from '@mui/icons-material';\n\ninterface ActionButton {\n  label: string;\n  onClick?: (event?: React.MouseEvent<HTMLButtonElement>) => void;\n  icon?: React.ReactNode;\n  variant?: 'contained' | 'outlined' | 'text';\n  color?: 'primary' | 'secondary' | 'error' | 'warning' | 'info' | 'success';\n  disabled?: boolean;\n  loading?: boolean;\n}\n\ninterface PageHeaderProps {\n  title: string;\n  subtitle?: string;\n  actions?: ActionButton[];\n  loading?: boolean;\n}\n\nexport const PageHeader: React.FC<PageHeaderProps> = ({\n  title,\n  subtitle,\n  actions = [],\n  loading = false,\n}) => {\n  if (loading) {\n    return (\n      <Box\n        display=\"flex\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        mb={2}\n        sx={{\n          py: 1.5,\n          px: 2,\n        }}\n      >\n        <Box>\n          <Skeleton variant=\"text\" width={200} height={40} />\n          {subtitle && <Skeleton variant=\"text\" width={300} height={20} sx={{ mt: 0.5 }} />}\n        </Box>\n        <Skeleton variant=\"rectangular\" width={120} height={40} sx={{ borderRadius: 2 }} />\n      </Box>\n    );\n  }\n\n  return (\n    <Box\n      display=\"flex\"\n      justifyContent=\"space-between\"\n      alignItems=\"center\"\n      mb={2}\n      sx={{\n        py: 1.5,\n        px: 2,\n      }}\n    >\n      <Box>\n        <Typography \n          variant=\"h4\" \n          component=\"h1\" \n          sx={{ \n            fontWeight: 600, \n            color: 'text.primary' \n          }}\n        >\n          {title}\n        </Typography>\n        {subtitle && (\n          <Typography \n            variant=\"body2\" \n            color=\"text.secondary\" \n            sx={{ mt: 0.5 }}\n          >\n            {subtitle}\n          </Typography>\n        )}\n      </Box>\n      \n      {actions.length > 0 && (\n        <Box sx={{ display: 'flex', gap: 1 }}>\n          {actions.map((action, index) => (\n            <Button\n              key={index}\n              variant={action.variant || 'contained'}\n              color={action.color || 'primary'}\n              startIcon={action.icon || (action.variant === 'contained' ? <AddIcon /> : undefined)}\n              onClick={(e) => action.onClick?.(e)}\n              disabled={action.disabled || action.loading}\n              sx={{\n                borderRadius: 2,\n                py: 1.5,\n                px: 3,\n                boxShadow: action.variant === 'contained' ? '0 2px 8px rgba(0,0,0,0.1)' : 'none',\n                '&:hover': {\n                  boxShadow: action.variant === 'contained' ? '0 4px 12px rgba(0,0,0,0.15)' : 'none',\n                }\n              }}\n            >\n              {action.label}\n            </Button>\n          ))}\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport default PageHeader;","import React from 'react';\nimport {\n  Paper,\n  Grid,\n  TextField,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  InputAdornment,\n  Typography,\n  Skeleton,\n} from '@mui/material';\nimport { Search as SearchIcon } from '@mui/icons-material';\n\ninterface FilterOption {\n  value: string;\n  label: string;\n}\n\ninterface Filter {\n  id: string;\n  label: string;\n  value: string;\n  onChange: (value: string) => void;\n  options: FilterOption[];\n  size?: number; // Grid size\n}\n\ninterface FilterBarProps {\n  searchTerm?: string;\n  onSearchChange?: (value: string) => void;\n  searchPlaceholder?: string;\n  filters?: Filter[];\n  resultCount?: number;\n  resultLabel?: string;\n  loading?: boolean;\n}\n\nexport const FilterBar: React.FC<FilterBarProps> = ({\n  searchTerm = '',\n  onSearchChange,\n  searchPlaceholder = 'Search...',\n  filters = [],\n  resultCount,\n  resultLabel = 'items',\n  loading = false,\n}) => {\n  if (loading) {\n    return (\n      <Paper sx={{ p: 2, mb: 2, borderRadius: 1 }}>\n        <Grid container spacing={2} alignItems=\"center\">\n          <Grid size={{ xs: 12, md: 4 }}>\n            <Skeleton variant=\"rectangular\" height={56} sx={{ borderRadius: 1 }} />\n          </Grid>\n          {Array.from({ length: 3 }).map((_, index) => (\n            <Grid key={index} size={{ xs: 12, md: 3 }}>\n              <Skeleton variant=\"rectangular\" height={56} sx={{ borderRadius: 1 }} />\n            </Grid>\n          ))}\n        </Grid>\n      </Paper>\n    );\n  }\n\n  // Calculate grid sizes dynamically\n  const hasSearch = !!onSearchChange;\n  const filterCount = filters.length;\n  const totalElements = (hasSearch ? 1 : 0) + filterCount + (resultCount !== undefined ? 1 : 0);\n  \n  const getGridSize = (index: number) => {\n    if (totalElements <= 2) return { xs: 12, md: 6 };\n    if (totalElements === 3) return { xs: 12, md: 4 };\n    if (totalElements === 4) return { xs: 12, md: 3 };\n    return { xs: 12, md: 2 };\n  };\n\n  return (\n    <Paper sx={{ p: 2, mb: 2, borderRadius: 1 }}>\n      <Grid container spacing={2} alignItems=\"center\">\n        {/* Search Field */}\n        {onSearchChange && (\n          <Grid size={getGridSize(0)}>\n            <TextField\n              fullWidth\n              placeholder={searchPlaceholder}\n              value={searchTerm}\n              onChange={(e) => onSearchChange(e.target.value)}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <SearchIcon />\n                  </InputAdornment>\n                ),\n              }}\n            />\n          </Grid>\n        )}\n\n        {/* Filters */}\n        {filters.map((filter, index) => (\n          <Grid key={filter.id} size={filter.size ? { xs: 12, md: filter.size } : getGridSize(index + (hasSearch ? 1 : 0))}>\n            <FormControl fullWidth>\n              <InputLabel>{filter.label}</InputLabel>\n              <Select\n                value={filter.value}\n                label={filter.label}\n                onChange={(e) => filter.onChange(e.target.value)}\n              >\n                {filter.options.map((option) => (\n                  <MenuItem key={option.value} value={option.value}>\n                    {option.label}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </Grid>\n        ))}\n\n        {/* Result Count */}\n        {resultCount !== undefined && (\n          <Grid size={getGridSize(totalElements - 1)}>\n            <Typography variant=\"body2\" color=\"textSecondary\">\n              {resultCount} {resultLabel}\n            </Typography>\n          </Grid>\n        )}\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default FilterBar;","import React from 'react';\nimport { Chip, ChipProps } from '@mui/material';\n\ntype StatusVariant = 'active' | 'inactive' | 'pending' | 'completed' | 'draft' | 'archived' | 'error' | 'warning' | 'success' | 'info';\n\ninterface StatusChipProps extends Omit<ChipProps, 'color'> {\n  status: StatusVariant;\n  customColors?: Record<string, { bg: string; color: string }>;\n}\n\nconst defaultStatusColors: Record<StatusVariant, { bg: string; color: string }> = {\n  active: { bg: 'success.light', color: 'success.dark' },\n  inactive: { bg: 'grey.300', color: 'grey.800' },\n  pending: { bg: 'warning.light', color: 'warning.dark' },\n  completed: { bg: 'success.light', color: 'success.dark' },\n  draft: { bg: 'info.light', color: 'info.dark' },\n  archived: { bg: 'grey.500', color: 'common.white' },\n  error: { bg: 'error.light', color: 'error.dark' },\n  warning: { bg: 'warning.light', color: 'warning.dark' },\n  success: { bg: 'success.light', color: 'success.dark' },\n  info: { bg: 'info.light', color: 'info.dark' },\n};\n\nexport const StatusChip: React.FC<StatusChipProps> = ({\n  status,\n  customColors,\n  sx,\n  ...props\n}) => {\n  const colors = customColors?.[status] || defaultStatusColors[status] || defaultStatusColors.info;\n\n  return (\n    <Chip\n      label={status.charAt(0).toUpperCase() + status.slice(1)}\n      size=\"small\"\n      sx={{\n        bgcolor: colors.bg,\n        color: colors.color,\n        fontWeight: 'bold',\n        textTransform: 'capitalize',\n        '& .MuiChip-label': {\n          px: 1.5,\n        },\n        ...sx,\n      }}\n      {...props}\n    />\n  );\n};\n\nexport default StatusChip;","import React from 'react';\nimport { Box, Typography, Button, Paper } from '@mui/material';\nimport { Add as AddIcon, Inbox as InboxIcon } from '@mui/icons-material';\n\ninterface EmptyStateProps {\n  title: string;\n  description?: string;\n  icon?: React.ReactNode;\n  actionLabel?: string;\n  onAction?: (event?: React.MouseEvent<HTMLButtonElement>) => void;\n  actionIcon?: React.ReactNode;\n  variant?: 'paper' | 'box';\n  size?: 'small' | 'medium' | 'large';\n}\n\nexport const EmptyState: React.FC<EmptyStateProps> = ({\n  title,\n  description,\n  icon,\n  actionLabel,\n  onAction,\n  actionIcon,\n  variant = 'paper',\n  size = 'medium',\n}) => {\n  const sizeConfig = {\n    small: { p: 2, iconSize: 40, titleVariant: 'h6' as const, spacing: 1 },\n    medium: { p: 4, iconSize: 60, titleVariant: 'h5' as const, spacing: 2 },\n    large: { p: 6, iconSize: 80, titleVariant: 'h4' as const, spacing: 3 },\n  };\n\n  const config = sizeConfig[size];\n\n  const content = (\n    <Box sx={{ textAlign: 'center', p: config.p }}>\n      {/* Icon */}\n      <Box\n        sx={{\n          mb: config.spacing,\n          color: 'text.disabled',\n          '& > *': {\n            fontSize: config.iconSize,\n          },\n        }}\n      >\n        {icon || <InboxIcon fontSize=\"inherit\" />}\n      </Box>\n\n      {/* Title */}\n      <Typography \n        variant={config.titleVariant} \n        gutterBottom\n        sx={{ \n          fontWeight: 600,\n          color: 'text.secondary',\n          mb: description ? 1 : config.spacing\n        }}\n      >\n        {title}\n      </Typography>\n\n      {/* Description */}\n      {description && (\n        <Typography \n          variant=\"body1\" \n          color=\"text.secondary\" \n          sx={{ mb: config.spacing }}\n        >\n          {description}\n        </Typography>\n      )}\n\n      {/* Action Button */}\n      {actionLabel && onAction && (\n        <Button\n          variant=\"contained\"\n          startIcon={actionIcon || <AddIcon />}\n          onClick={(e) => onAction?.(e)}\n          sx={{\n            borderRadius: 2,\n            py: 1.5,\n            px: 3,\n          }}\n        >\n          {actionLabel}\n        </Button>\n      )}\n    </Box>\n  );\n\n  if (variant === 'paper') {\n    return <Paper>{content}</Paper>;\n  }\n\n  return content;\n};\n\nexport default EmptyState;","import React from 'react';\nimport { Box, CircularProgress, Typography, Backdrop, Portal } from '@mui/material';\n\ninterface LoadingOverlayProps {\n  loading: boolean;\n  message?: string;\n  variant?: 'overlay' | 'inline' | 'backdrop';\n  size?: number;\n}\n\nexport const LoadingOverlay: React.FC<LoadingOverlayProps> = ({\n  loading,\n  message,\n  variant = 'overlay',\n  size = 40,\n}) => {\n  if (!loading) return null;\n\n  const loadingContent = (\n    <Box\n      display=\"flex\"\n      flexDirection=\"column\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      gap={2}\n    >\n      <CircularProgress size={size} />\n      {message && (\n        <Typography variant=\"body2\" color=\"text.secondary\">\n          {message}\n        </Typography>\n      )}\n    </Box>\n  );\n\n  switch (variant) {\n    case 'backdrop':\n      return (\n        <Portal>\n          <Backdrop\n            open={loading}\n            sx={{\n              color: '#fff',\n              zIndex: (theme) => theme.zIndex.drawer + 1,\n              bgcolor: 'rgba(0, 0, 0, 0.5)',\n            }}\n          >\n            {loadingContent}\n          </Backdrop>\n        </Portal>\n      );\n\n    case 'overlay':\n      return (\n        <Box\n          position=\"fixed\"\n          top={0}\n          left={0}\n          width=\"100%\"\n          height=\"100%\"\n          bgcolor=\"rgba(0, 0, 0, 0.5)\"\n          display=\"flex\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          zIndex={9999}\n        >\n          {loadingContent}\n        </Box>\n      );\n\n    case 'inline':\n    default:\n      return (\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          p={4}\n        >\n          {loadingContent}\n        </Box>\n      );\n  }\n};\n\nexport default LoadingOverlay;","import React from 'react';\nimport { Card, CardContent, CardActions, Box, Typography, Skeleton } from '@mui/material';\n\ninterface DataCardProps {\n  title?: string;\n  subtitle?: string;\n  children?: React.ReactNode;\n  actions?: React.ReactNode;\n  loading?: boolean;\n  onClick?: () => void;\n  selected?: boolean;\n  variant?: 'elevation' | 'outlined';\n  size?: 'small' | 'medium' | 'large';\n}\n\nexport const DataCard: React.FC<DataCardProps> = ({\n  title,\n  subtitle,\n  children,\n  actions,\n  loading = false,\n  onClick,\n  selected = false,\n  variant = 'elevation',\n  size = 'medium',\n}) => {\n  const sizeConfig = {\n    small: { p: 1.5, spacing: 1 },\n    medium: { p: 2, spacing: 1.5 },\n    large: { p: 3, spacing: 2 },\n  };\n\n  const config = sizeConfig[size];\n\n  if (loading) {\n    return (\n      <Card \n        variant={variant}\n        sx={{\n          height: '100%',\n          display: 'flex',\n          flexDirection: 'column',\n        }}\n      >\n        <CardContent sx={{ p: config.p, flexGrow: 1 }}>\n          <Skeleton variant=\"text\" width=\"60%\" height={28} />\n          <Skeleton variant=\"text\" width=\"80%\" height={20} sx={{ mt: 0.5 }} />\n          <Box sx={{ mt: config.spacing }}>\n            <Skeleton variant=\"rectangular\" height={60} />\n          </Box>\n        </CardContent>\n        {actions && (\n          <CardActions sx={{ p: config.p, pt: 0 }}>\n            <Skeleton variant=\"rectangular\" width={80} height={32} />\n          </CardActions>\n        )}\n      </Card>\n    );\n  }\n\n  return (\n    <Card\n      variant={variant}\n      sx={{\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        cursor: onClick ? 'pointer' : 'default',\n        border: selected ? '2px solid' : undefined,\n        borderColor: selected ? 'primary.main' : undefined,\n        transition: 'all 0.2s ease-in-out',\n        '&:hover': onClick ? {\n          transform: 'translateY(-2px)',\n          boxShadow: (theme) => theme.shadows[4],\n        } : {},\n      }}\n      onClick={onClick}\n    >\n      <CardContent sx={{ p: config.p, flexGrow: 1 }}>\n        {/* Header */}\n        {(title || subtitle) && (\n          <Box sx={{ mb: config.spacing }}>\n            {title && (\n              <Typography \n                variant=\"h6\" \n                component=\"h3\"\n                sx={{ \n                  fontWeight: 600,\n                  lineHeight: 1.2,\n                  mb: subtitle ? 0.5 : 0\n                }}\n              >\n                {title}\n              </Typography>\n            )}\n            {subtitle && (\n              <Typography \n                variant=\"body2\" \n                color=\"text.secondary\"\n                sx={{ lineHeight: 1.4 }}\n              >\n                {subtitle}\n              </Typography>\n            )}\n          </Box>\n        )}\n\n        {/* Content */}\n        {children}\n      </CardContent>\n\n      {/* Actions */}\n      {actions && (\n        <CardActions sx={{ p: config.p, pt: 0 }}>\n          {actions}\n        </CardActions>\n      )}\n    </Card>\n  );\n};\n\nexport default DataCard;","import { FC } from 'react';\nimport { List, ListItem, ListItemButton, ListItemIcon, ListItemText, Divider, Box, Typography } from '@mui/material';\nimport { Link as RouterLink, useLocation } from 'react-router-dom';\nimport DashboardIcon from '@mui/icons-material/Dashboard';\nimport PeopleIcon from '@mui/icons-material/People';\nimport AssessmentIcon from '@mui/icons-material/Assessment';\nimport PsychologyIcon from '@mui/icons-material/Psychology';\nimport LightbulbIcon from '@mui/icons-material/Lightbulb';\nimport MapIcon from '@mui/icons-material/Map';\nimport TimelineIcon from '@mui/icons-material/Timeline';\nimport ReceiptIcon from '@mui/icons-material/Receipt';\nimport SettingsIcon from '@mui/icons-material/Settings';\nimport { styled } from '@mui/material/styles';\nimport React from 'react';\n\ninterface SidebarProps {\n  onClose?: () => void;\n}\n\nconst StyledNavItem = styled(ListItem)(({ theme }) => ({\n  '&.Mui-selected': {\n    backgroundColor: theme.palette.action.selected,\n    '&:hover': {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n  '&:hover': {\n    backgroundColor: theme.palette.action.hover,\n  },\n  borderRadius: theme.shape.borderRadius,\n  margin: theme.spacing(0.5, 1.5),\n  padding: theme.spacing(1, 2),\n  width: 'auto',\n}));\n\nconst StyledNavItemIcon = styled(ListItemIcon)({\n  minWidth: 40,\n  color: 'inherit',\n});\n\nconst NavSection: FC<{ title: string }> = ({ title }) => (\n  <Box sx={{ px: 2, py: 1.5 }}>\n    <Typography variant=\"overline\" color=\"text.secondary\" fontWeight=\"medium\">\n      {title}\n    </Typography>\n  </Box>\n);\n\nconst navItems = [\n  { text: 'Overview', icon: <DashboardIcon />, path: '/' },\n  { text: 'Clients', icon: <PeopleIcon />, path: '/clients' },\n  { text: 'Reports', icon: <AssessmentIcon />, path: '/reports' },\n];\n\nconst analysisItems = [\n  { text: 'AI Analysis', icon: <PsychologyIcon />, path: '/analysis' },\n  { text: 'Automation Strategy', icon: <LightbulbIcon />, path: '/strategy' },\n  { text: 'Floor Map', icon: <MapIcon />, path: '/floorplan' },\n];\n\nconst otherItems = [\n  { text: 'Timeline', icon: <TimelineIcon />, path: '/timeline' },\n  { text: 'Invoicing', icon: <ReceiptIcon />, path: '/invoicing' },\n  { text: 'Settings', icon: <SettingsIcon />, path: '/settings' },\n];\n\nexport const Sidebar: FC<SidebarProps> = ({ onClose }) => {\n  const location = useLocation();\n\n  const renderNavItems = (items: typeof navItems) =>\n    items.map((item) => (\n      <ListItem key={item.path} disablePadding>\n        <ListItemButton\n          component={RouterLink}\n          to={item.path}\n          selected={location.pathname === item.path}\n          onClick={onClose}\n          sx={{\n            '&.Mui-selected': {\n              backgroundColor: 'action.selected',\n              '&:hover': {\n                backgroundColor: 'action.hover',\n              },\n            },\n            '&:hover': {\n              backgroundColor: 'action.hover',\n            },\n          }}\n        >\n          <StyledNavItemIcon>{item.icon}</StyledNavItemIcon>\n          <ListItemText primary={item.text} />\n        </ListItemButton>\n      </ListItem>\n    ));\n\n  return (\n    <Box sx={{ width: 240 }} role=\"presentation\">\n      <Box sx={{ p: 2, display: 'flex', alignItems: 'center' }}>\n        <Typography variant=\"h6\" component=\"h1\" sx={{ fontWeight: 700 }}>\n          SSP\n        </Typography>\n      </Box>\n      \n      <List>\n        <NavSection title=\"Dashboard\" />\n        {renderNavItems(navItems)}\n        \n        <NavSection title=\"Analysis\" />\n        {renderNavItems(analysisItems)}\n        \n        <NavSection title=\"Other\" />\n        {renderNavItems(otherItems)}\n      </List>\n    </Box>\n  );\n};\n\nexport default Sidebar;\n","import { Card, CardContent, Typography, Box, Skeleton } from '@mui/material';\nimport { TrendingUp, TrendingDown } from '@mui/icons-material';\nimport { ReactNode } from 'react';\n\ninterface StatCardProps {\n  title: string;\n  value: string | number;\n  growth: number;\n  icon: ReactNode;\n  color: string;\n  isLoading?: boolean;\n  onClick?: () => void;\n}\n\nexport const StatCard = ({\n  title,\n  value,\n  growth,\n  icon,\n  color,\n  isLoading = false,\n  onClick,\n}: StatCardProps) => {\n  const isPositive = growth >= 0;\n  const GrowthIcon = isPositive ? TrendingUp : TrendingDown;\n\n  if (isLoading) {\n    return (\n      <Card sx={{ height: '100%' }}>\n        <CardContent>\n          <Skeleton variant=\"text\" width=\"60%\" />\n          <Skeleton variant=\"rectangular\" height={40} sx={{ my: 1 }} />\n          <Skeleton variant=\"text\" width=\"40%\" />\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <Card \n      onClick={onClick}\n      sx={{\n        height: '100%',\n        cursor: onClick ? 'pointer' : 'default',\n        transition: 'transform 0.2s, box-shadow 0.2s',\n        '&:hover': {\n          transform: 'translateY(-4px)',\n          boxShadow: 8,\n        },\n      }}\n    >\n      <CardContent>\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"flex-start\">\n          <Box>\n            <Typography variant=\"subtitle2\" color=\"text.secondary\" gutterBottom>\n              {title}\n            </Typography>\n            <Typography variant=\"h4\" fontWeight={700} color={color} gutterBottom>\n              {value}\n            </Typography>\n            <Box \n              display=\"flex\" \n              alignItems=\"center\" \n              color={isPositive ? 'success.main' : 'error.main'}\n            >\n              <GrowthIcon sx={{ fontSize: '1rem', mr: 0.5 }} />\n              <Typography variant=\"caption\" fontWeight={500}>\n                {Math.abs(growth)}% {isPositive ? 'growth' : 'decline'}\n              </Typography>\n            </Box>\n          </Box>\n          <Box\n            sx={{\n              backgroundColor: `${color}10`,\n              borderRadius: '50%',\n              width: 56,\n              height: 56,\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              color: color,\n            }}\n          >\n            {icon}\n          </Box>\n        </Box>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default StatCard;\n","import { Box, Card, CardContent, Typography, useTheme, Skeleton } from '@mui/material';\nimport { Doughnut } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  ArcElement,\n  Tooltip,\n  Legend,\n  ChartData,\n  ChartOptions,\n} from 'chart.js';\n\n// Register ChartJS components\nChartJS.register(ArcElement, Tooltip, Legend);\n\ninterface ProjectStatusData {\n  status: string;\n  count: number;\n  color: string;\n}\n\ninterface ProjectStatusChartProps {\n  data: ProjectStatusData[];\n  isLoading?: boolean;\n}\n\nexport const ProjectStatusChart = ({ data, isLoading = false }: ProjectStatusChartProps) => {\n  const theme = useTheme();\n\n  const chartData: ChartData<'doughnut'> = {\n    labels: data.map((item) => item.status),\n    datasets: [\n      {\n        data: data.map((item) => item.count),\n        backgroundColor: data.map((item) => item.color),\n        borderWidth: 1,\n        borderColor: theme.palette.background.paper,\n      },\n    ],\n  };\n\n  const options: ChartOptions<'doughnut'> = {\n    responsive: true,\n    maintainAspectRatio: false,\n    cutout: '70%',\n    plugins: {\n      legend: {\n        position: 'bottom',\n        labels: {\n          padding: 20,\n          usePointStyle: true,\n          pointStyle: 'circle',\n          color: theme.palette.text.primary,\n        },\n      },\n      tooltip: {\n        backgroundColor: theme.palette.background.paper,\n        titleColor: theme.palette.text.primary,\n        bodyColor: theme.palette.text.secondary,\n        borderColor: theme.palette.divider,\n        borderWidth: 1,\n        padding: 12,\n        //boxShadow: theme.shadows[3],\n        callbacks: {\n          label: function(context) {\n            const label = context.label || '';\n            const value = context.raw as number;\n            const total = context.dataset.data.reduce((a: number, b: number) => a + b, 0);\n            const percentage = Math.round((value / total) * 100);\n            return `${label}: ${value} (${percentage}%)`;\n          },\n        },\n      },\n    },\n  };\n\n  return (\n    <Card sx={{ height: '100%' }}>\n      <CardContent sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}>\n        <Typography variant=\"h6\" component=\"div\" gutterBottom>\n          Projects by Status\n        </Typography>\n        <Box sx={{ flex: 1, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n          {isLoading ? (\n            <Skeleton variant=\"circular\" width={200} height={200} />\n          ) : (\n            <Box sx={{ width: '100%', maxWidth: 300, margin: '0 auto' }}>\n              <Doughnut data={chartData} options={options} />\n            </Box>\n          )}\n        </Box>\n        {!isLoading && (\n          <Box\n            sx={{\n              display: 'flex',\n              flexWrap: 'wrap',\n              justifyContent: 'center',\n              gap: 2,\n              mt: 2,\n            }}\n          >\n            {data.map((item, index) => (\n              <Box key={index} sx={{ display: 'flex', alignItems: 'center' }}>\n                <Box\n                  sx={{\n                    width: 12,\n                    height: 12,\n                    borderRadius: '50%',\n                    backgroundColor: item.color,\n                    mr: 1,\n                  }}\n                />\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  {item.status}: {item.count}\n                </Typography>\n              </Box>\n            ))}\n          </Box>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default ProjectStatusChart;\n","import { Box, Card, CardContent, Typography, ButtonGroup, Button, Skeleton } from '@mui/material';\nimport { Line } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport { useTheme } from '@mui/material/styles';\n\n\n// Register ChartJS components\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\ntype TimeRange = 'week' | 'month' | 'year';\n\ninterface RevenueChartProps {\n  data: {\n    labels: string[];\n    values: number[];\n  };\n  timeRange: TimeRange;\n  onTimeRangeChange: (range: TimeRange) => void;\n  isLoading?: boolean;\n}\n\nexport const RevenueChart = ({\n  data,\n  timeRange,\n  onTimeRangeChange,\n  isLoading = false,\n}: RevenueChartProps) => {\n  const theme = useTheme();\n\n  const chartData = {\n    labels: data.labels,\n    datasets: [\n      {\n        label: 'Revenue',\n        data: data.values,\n        borderColor: theme.palette.primary.main,\n        backgroundColor: `${theme.palette.primary.main}20`,\n        tension: 0.4,\n        fill: true,\n        pointBackgroundColor: theme.palette.primary.main,\n        pointBorderColor: '#fff',\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: theme.palette.primary.dark,\n        pointHoverBorderColor: '#fff',\n        pointHitRadius: 10,\n        pointBorderWidth: 2,\n      },\n    ],\n  };\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        display: false,\n      },\n      tooltip: {\n        backgroundColor: theme.palette.background.paper,\n        titleColor: theme.palette.text.primary,\n        bodyColor: theme.palette.text.secondary,\n        borderColor: theme.palette.divider,\n        borderWidth: 1,\n        padding: 12,\n        boxShadow: theme.shadows[3],\n        callbacks: {\n          label: function(context: any) {\n            return `£${context.parsed.y.toLocaleString()}`;\n          },\n        },\n      },\n    },\n    scales: {\n      x: {\n        grid: {\n          display: false,\n        },\n        ticks: {\n          color: theme.palette.text.secondary,\n        },\n      },\n      y: {\n        grid: {\n          color: theme.palette.divider,\n        },\n        ticks: {\n          color: theme.palette.text.secondary,\n          callback: (value: any) => `£${value / 1000}k`,\n        },\n      },\n    },\n  };\n\n  return (\n    <Card sx={{ height: '100%' }}>\n      <CardContent sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}>\n        <Box\n          sx={{\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            mb: 2,\n          }}\n        >\n          <Typography variant=\"h6\" component=\"div\">\n            Revenue Trend\n          </Typography>\n          <ButtonGroup size=\"small\" variant=\"outlined\">\n            <Button\n              variant={timeRange === 'week' ? 'contained' : 'outlined'}\n              onClick={() => onTimeRangeChange('week')}\n            >\n              Week\n            </Button>\n            <Button\n              variant={timeRange === 'month' ? 'contained' : 'outlined'}\n              onClick={() => onTimeRangeChange('month')}\n            >\n              Month\n            </Button>\n            <Button\n              variant={timeRange === 'year' ? 'contained' : 'outlined'}\n              onClick={() => onTimeRangeChange('year')}\n            >\n              Year\n            </Button>\n          </ButtonGroup>\n        </Box>\n        <Box sx={{ flex: 1, minHeight: 300 }}>\n          {isLoading ? (\n            <Skeleton variant=\"rectangular\" width=\"100%\" height={300} />\n          ) : (\n            <Line data={chartData} options={options} />\n          )}\n        </Box>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default RevenueChart;\n","import { Box, Card, CardContent, Typography, List, ListItem, ListItemIcon, ListItemText, Skeleton } from '@mui/material';\nimport { \n  CheckCircle as CheckCircleIcon,\n  Warning as WarningIcon,\n  Info as InfoIcon,\n  Error as ErrorIcon,\n  ArrowForward as ArrowForwardIcon \n} from '@mui/icons-material';\nimport { formatDistanceToNow } from 'date-fns/formatDistanceToNow';\nimport { isValid } from 'date-fns/isValid';\n\ninterface Activity {\n  id: string | number;\n  title: string;\n  description: string;\n  timestamp: Date | string;\n  type: 'success' | 'warning' | 'info' | 'error';\n}\n\ninterface RecentActivitiesProps {\n  activities: Activity[];\n  isLoading?: boolean;\n  maxItems?: number;\n}\n\n/**\n * Safely formats a date to a relative time string\n * @param date Date object or string to format\n * @returns Formatted date string or a fallback message\n */\nconst formatDateSafely = (date: unknown): string => {\n  // Handle undefined, null, or empty string\n  if (!date) return 'Some time ago';\n  \n  // If it's already a valid date object\n  if (date instanceof Date && isValid(date)) {\n    return formatDistanceToNow(date, { addSuffix: true });\n  }\n  \n  // If it's a string that can be parsed as a date\n  if (typeof date === 'string') {\n    // Try to parse the date string\n    const parsedDate = new Date(date);\n    if (isValid(parsedDate)) {\n      return formatDistanceToNow(parsedDate, { addSuffix: true });\n    }\n    \n    // Try to parse ISO string without timezone (common format)\n    const isoDate = new Date(date + 'Z');\n    if (isValid(isoDate)) {\n      return formatDistanceToNow(isoDate, { addSuffix: true });\n    }\n    \n    console.warn('Invalid date string provided:', date);\n    return 'Some time ago';\n  }\n  \n  // For any other case, log the type and return fallback\n  console.warn('Unsupported date format:', { type: typeof date, value: date });\n  return 'Some time ago';\n};\n\nconst getActivityIcon = (type: Activity['type']) => {\n  switch (type) {\n    case 'success':\n      return <CheckCircleIcon color=\"success\" />;\n    case 'warning':\n      return <WarningIcon color=\"warning\" />;\n    case 'error':\n      return <ErrorIcon color=\"error\" />;\n    case 'info':\n    default:\n      return <InfoIcon color=\"info\" />;\n  }\n};\n\nexport const RecentActivities = ({ \n  activities, \n  isLoading = false, \n  maxItems = 5 \n}: RecentActivitiesProps) => {\n  const displayedActivities = activities.slice(0, maxItems);\n\n  if (isLoading) {\n    return (\n      <Card>\n        <CardContent>\n          <Typography variant=\"h6\" gutterBottom>\n            Recent Activities\n          </Typography>\n          <List>\n            {[...Array(4)].map((_, index) => (\n              <ListItem key={index}>\n                <Skeleton variant=\"circular\" width={24} height={24} sx={{ mr: 2 }} />\n                <Box sx={{ width: '100%' }}>\n                  <Skeleton variant=\"text\" width=\"60%\" />\n                  <Skeleton variant=\"text\" width=\"80%\" />\n                  <Skeleton variant=\"text\" width=\"40%\" />\n                </Box>\n              </ListItem>\n            ))}\n          </List>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <Card sx={{ height: '100%' }}>\n      <CardContent sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}>\n        <Box \n          sx={{ \n            display: 'flex', \n            justifyContent: 'space-between', \n            alignItems: 'center',\n            mb: 2 \n          }}\n        >\n          <Typography variant=\"h6\" component=\"div\">\n            Recent Activities\n          </Typography>\n          <Typography \n            variant=\"body2\" \n            color=\"primary\"\n            sx={{ \n              display: 'flex', \n              alignItems: 'center',\n              cursor: 'pointer',\n              '&:hover': {\n                textDecoration: 'underline'\n              }\n            }}\n          >\n            View All\n            <ArrowForwardIcon fontSize=\"small\" sx={{ ml: 0.5 }} />\n          </Typography>\n        </Box>\n        \n        {displayedActivities.length > 0 ? (\n          <List sx={{ flex: 1, overflow: 'auto' }}>\n            {displayedActivities.map((activity) => (\n              <ListItem \n                key={activity.id} \n                alignItems=\"flex-start\"\n                sx={{\n                  px: 0,\n                  py: 1,\n                  borderBottom: '1px solid',\n                  borderColor: 'divider',\n                  '&:last-child': {\n                    borderBottom: 'none',\n                  },\n                  '&:hover': {\n                    backgroundColor: 'action.hover',\n                  },\n                }}\n              >\n                <ListItemIcon sx={{ minWidth: 40, mt: 0.5 }}>\n                  {getActivityIcon(activity.type)}\n                </ListItemIcon>\n                <ListItemText\n                  primary={\n                    <Typography variant=\"subtitle2\" component=\"div\">\n                      {activity.title}\n                    </Typography>\n                  }\n                  secondary={\n                    <>\n                      <Typography\n                        component=\"span\"\n                        variant=\"body2\"\n                        color=\"text.secondary\"\n                        sx={{ display: 'block' }}\n                      >\n                        {activity.description}\n                      </Typography>\n                      <Typography\n                        component=\"span\"\n                        variant=\"caption\"\n                        color=\"text.secondary\"\n                        sx={{ display: 'block', mt: 0.5 }}\n                      >\n                        {formatDateSafely(activity.timestamp)}\n                      </Typography>\n                    </>\n                  }\n                />\n              </ListItem>\n            ))}\n          </List>\n        ) : (\n          <Box \n            sx={{ \n              flex: 1, \n              display: 'flex', \n              flexDirection: 'column', \n              alignItems: 'center', \n              justifyContent: 'center',\n              color: 'text.secondary',\n              p: 4,\n              textAlign: 'center'\n            }}\n          >\n            <InfoIcon sx={{ fontSize: 40, mb: 1, opacity: 0.5 }} />\n            <Typography variant=\"body2\">No recent activities to display</Typography>\n          </Box>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default RecentActivities;\n","import { Box } from '@mui/material';\nimport { StatCard } from './StatCard';\nimport { ProjectStatusChart } from './ProjectStatusChart';\nimport { RevenueChart } from './RevenueChart';\nimport { RecentActivities } from './RecentActivities';\nimport { Assignment, People, AttachMoney, CheckCircle } from '@mui/icons-material';\nimport { PageContainer, PageHeader } from '../../components';\n\n// Define types for our mock data\ninterface ProjectStatusData {\n  status: string;\n  count: number;\n  color: string;\n}\n\ninterface RevenueData {\n  labels: string[];\n  values: number[];\n}\n\ninterface Activity {\n  id: number;\n  title: string;\n  description: string;\n  timestamp: string;\n  type: 'info' | 'warning' | 'error' | 'success';\n}\n\nconst DashboardPage = () => {\n  // Mock data - replace with real data fetching\n  const stats = [\n    { \n      title: 'Total Projects', \n      value: '24', \n      growth: 12, \n      icon: <Assignment />,\n      color: '#4caf50'\n    },\n    { \n      title: 'Active Clients', \n      value: '18', \n      growth: 5, \n      icon: <People />,\n      color: '#2196f3'\n    },\n    { \n      title: 'Revenue', \n      value: '$42.5k', \n      growth: -2, \n      icon: <AttachMoney />,\n      color: '#9c27b0'\n    },\n    { \n      title: 'Tasks Completed', \n      value: '156', \n      growth: 8, \n      icon: <CheckCircle />,\n      color: '#ff9800'\n    },\n  ];\n\n  // Mock data for charts\n  const projectData: ProjectStatusData[] = [\n    { status: 'Completed', count: 12, color: '#4caf50' },\n    { status: 'In Progress', count: 8, color: '#2196f3' },\n    { status: 'Not Started', count: 4, color: '#9e9e9e' },\n  ];\n\n  const revenueData: RevenueData = {\n    labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'],\n    values: [4000, 3000, 5000, 2780, 1890, 2390],\n  };\n\n  // Mock activities\n  const activities: Activity[] = [\n    { \n      id: 1, \n      title: 'New Project Created', \n      description: 'John Doe created a new project', \n      timestamp: '2 minutes ago',\n      type: 'info'\n    },\n    { \n      id: 2, \n      title: 'Client Details Updated', \n      description: 'Jane Smith updated client details', \n      timestamp: '1 hour ago',\n      type: 'info'\n    },\n    { \n      id: 3, \n      title: 'Task Completed', \n      description: 'Mike Johnson completed a task', \n      timestamp: '3 hours ago',\n      type: 'success'\n    },\n  ];\n\n  return (\n    <PageContainer>\n      <PageHeader title=\"Dashboard\" />\n      \n      {/* Stats Grid */}\n      <Box sx={{ display: 'grid', gridTemplateColumns: { xs: '1fr', sm: 'repeat(2, 1fr)', md: 'repeat(4, 1fr)' }, gap: 3, mb: 3 }}>\n        {stats.map((stat, index) => (\n          <Box key={index}>\n            <StatCard \n              title={stat.title}\n              value={stat.value}\n              growth={stat.growth}\n              icon={stat.icon}\n              color={stat.color}\n            />\n          </Box>\n        ))}\n      </Box>\n\n      {/* Charts Row */}\n      <Box sx={{ display: 'grid', gridTemplateColumns: { xs: '1fr', md: '2fr 1fr' }, gap: 3, mb: 3 }}>\n        <Box>\n          <ProjectStatusChart data={projectData} />\n        </Box>\n        <Box>\n          <RevenueChart data={revenueData} timeRange=\"month\" onTimeRangeChange={() => {}} />\n        </Box>\n      </Box>\n\n      {/* Recent Activities */}\n      <Box>\n        <RecentActivities activities={activities} />\n      </Box>\n    </PageContainer>\n  );\n};\n\nexport default DashboardPage;\n"],"names":["PageContainer","_ref","children","maxWidth","fullHeight","sx","props","_objectWithoutProperties","_excluded","_jsx","Box","_objectSpread","height","display","flexDirection","PageHeader","title","subtitle","actions","loading","_jsxs","justifyContent","alignItems","mb","py","px","Skeleton","variant","width","mt","borderRadius","Typography","component","fontWeight","color","length","gap","map","action","index","Button","startIcon","icon","AddIcon","undefined","onClick","e","_action$onClick","call","disabled","boxShadow","label","FilterBar","searchTerm","onSearchChange","searchPlaceholder","filters","resultCount","resultLabel","Paper","p","Grid","container","spacing","size","xs","md","Array","from","_","hasSearch","filterCount","totalElements","getGridSize","TextField","fullWidth","placeholder","value","onChange","target","InputProps","startAdornment","InputAdornment","position","SearchIcon","filter","FormControl","InputLabel","Select","options","option","MenuItem","id","defaultStatusColors","active","bg","inactive","pending","completed","draft","archived","error","warning","success","info","StatusChip","status","customColors","colors","Chip","charAt","toUpperCase","slice","bgcolor","textTransform","EmptyState","description","actionLabel","onAction","actionIcon","config","small","iconSize","titleVariant","medium","large","content","textAlign","fontSize","InboxIcon","gutterBottom","LoadingOverlay","message","loadingContent","CircularProgress","Portal","Backdrop","open","zIndex","theme","drawer","top","left","DataCard","selected","Card","CardContent","flexGrow","CardActions","pt","cursor","border","borderColor","transition","transform","shadows","lineHeight","styled","ListItem","backgroundColor","palette","hover","shape","margin","padding","ListItemIcon","minWidth","DashboardIcon","PeopleIcon","AssessmentIcon","PsychologyIcon","LightbulbIcon","MapIcon","TimelineIcon","ReceiptIcon","SettingsIcon","StatCard","growth","isLoading","isPositive","GrowthIcon","TrendingUp","TrendingDown","my","mr","Math","abs","concat","ChartJS","register","ArcElement","Tooltip","Legend","ProjectStatusChart","data","useTheme","chartData","labels","item","datasets","count","borderWidth","background","paper","responsive","maintainAspectRatio","cutout","plugins","legend","usePointStyle","pointStyle","text","primary","tooltip","titleColor","bodyColor","secondary","divider","callbacks","context","raw","total","dataset","reduce","a","b","percentage","round","flex","Doughnut","flexWrap","CategoryScale","LinearScale","PointElement","LineElement","Title","RevenueChart","timeRange","onTimeRangeChange","values","main","tension","fill","pointBackgroundColor","pointBorderColor","pointHoverRadius","pointHoverBackgroundColor","dark","pointHoverBorderColor","pointHitRadius","pointBorderWidth","parsed","y","toLocaleString","scales","x","grid","ticks","callback","ButtonGroup","minHeight","Line","formatDateSafely","date","Date","isValid","formatDistanceToNow","addSuffix","parsedDate","isoDate","console","warn","type","getActivityIcon","CheckCircleIcon","WarningIcon","ErrorIcon","InfoIcon","RecentActivities","activities","maxItems","displayedActivities","List","textDecoration","ArrowForwardIcon","ml","overflow","activity","borderBottom","ListItemText","_Fragment","timestamp","opacity","DashboardPage","stats","Assignment","People","AttachMoney","CheckCircle","gridTemplateColumns","sm","stat"],"sourceRoot":""}