{"version":3,"file":"static/js/173.fdc56cd8.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/esm/CardHeader/cardHeaderClasses.js","../node_modules/@mui/material/esm/CardHeader/CardHeader.js","../node_modules/@mui/icons-material/esm/Security.js","../node_modules/@mui/icons-material/esm/Save.js","pages/SettingsPage/SettingsPage.tsx","components/layout/PageContainer.tsx","components/layout/PageHeader.tsx","components/layout/FilterBar.tsx","components/ui/StatusChip.tsx","components/ui/EmptyState.tsx","components/ui/LoadingOverlay.tsx","components/ui/DataCard.tsx","components/Sidebar.tsx"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardHeaderUtilityClass(slot) {\n  return generateUtilityClass('MuiCardHeader', slot);\n}\nconst cardHeaderClasses = generateUtilityClasses('MuiCardHeader', ['root', 'avatar', 'action', 'content', 'title', 'subheader']);\nexport default cardHeaderClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '@mui/utils/composeClasses';\nimport Typography, { typographyClasses } from \"../Typography/index.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport cardHeaderClasses, { getCardHeaderUtilityClass } from \"./cardHeaderClasses.js\";\nimport useSlot from \"../utils/useSlot.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    avatar: ['avatar'],\n    action: ['action'],\n    content: ['content'],\n    title: ['title'],\n    subheader: ['subheader']\n  };\n  return composeClasses(slots, getCardHeaderUtilityClass, classes);\n};\nconst CardHeaderRoot = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [{\n      [`& .${cardHeaderClasses.title}`]: styles.title\n    }, {\n      [`& .${cardHeaderClasses.subheader}`]: styles.subheader\n    }, styles.root];\n  }\n})({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 16\n});\nconst CardHeaderAvatar = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Avatar'\n})({\n  display: 'flex',\n  flex: '0 0 auto',\n  marginRight: 16\n});\nconst CardHeaderAction = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Action'\n})({\n  flex: '0 0 auto',\n  alignSelf: 'flex-start',\n  marginTop: -4,\n  marginRight: -8,\n  marginBottom: -4\n});\nconst CardHeaderContent = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Content'\n})({\n  flex: '1 1 auto',\n  [`.${typographyClasses.root}:where(& .${cardHeaderClasses.title})`]: {\n    display: 'block'\n  },\n  [`.${typographyClasses.root}:where(& .${cardHeaderClasses.subheader})`]: {\n    display: 'block'\n  }\n});\nconst CardHeader = /*#__PURE__*/React.forwardRef(function CardHeader(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardHeader'\n  });\n  const {\n    action,\n    avatar,\n    component = 'div',\n    disableTypography = false,\n    subheader: subheaderProp,\n    subheaderTypographyProps,\n    title: titleProp,\n    titleTypographyProps,\n    slots = {},\n    slotProps = {},\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    component,\n    disableTypography\n  };\n  const classes = useUtilityClasses(ownerState);\n  const externalForwardedProps = {\n    slots,\n    slotProps: {\n      title: titleTypographyProps,\n      subheader: subheaderTypographyProps,\n      ...slotProps\n    }\n  };\n  let title = titleProp;\n  const [TitleSlot, titleSlotProps] = useSlot('title', {\n    className: classes.title,\n    elementType: Typography,\n    externalForwardedProps,\n    ownerState,\n    additionalProps: {\n      variant: avatar ? 'body2' : 'h5',\n      component: 'span'\n    }\n  });\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/_jsx(TitleSlot, {\n      ...titleSlotProps,\n      children: title\n    });\n  }\n  let subheader = subheaderProp;\n  const [SubheaderSlot, subheaderSlotProps] = useSlot('subheader', {\n    className: classes.subheader,\n    elementType: Typography,\n    externalForwardedProps,\n    ownerState,\n    additionalProps: {\n      variant: avatar ? 'body2' : 'body1',\n      color: 'textSecondary',\n      component: 'span'\n    }\n  });\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/_jsx(SubheaderSlot, {\n      ...subheaderSlotProps,\n      children: subheader\n    });\n  }\n  const [RootSlot, rootSlotProps] = useSlot('root', {\n    ref,\n    className: classes.root,\n    elementType: CardHeaderRoot,\n    externalForwardedProps: {\n      ...externalForwardedProps,\n      ...other,\n      component\n    },\n    ownerState\n  });\n  const [AvatarSlot, avatarSlotProps] = useSlot('avatar', {\n    className: classes.avatar,\n    elementType: CardHeaderAvatar,\n    externalForwardedProps,\n    ownerState\n  });\n  const [ContentSlot, contentSlotProps] = useSlot('content', {\n    className: classes.content,\n    elementType: CardHeaderContent,\n    externalForwardedProps,\n    ownerState\n  });\n  const [ActionSlot, actionSlotProps] = useSlot('action', {\n    className: classes.action,\n    elementType: CardHeaderAction,\n    externalForwardedProps,\n    ownerState\n  });\n  return /*#__PURE__*/_jsxs(RootSlot, {\n    ...rootSlotProps,\n    children: [avatar && /*#__PURE__*/_jsx(AvatarSlot, {\n      ...avatarSlotProps,\n      children: avatar\n    }), /*#__PURE__*/_jsxs(ContentSlot, {\n      ...contentSlotProps,\n      children: [title, subheader]\n    }), action && /*#__PURE__*/_jsx(ActionSlot, {\n      ...actionSlotProps,\n      children: action\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n  /**\n   * The Avatar element to display.\n   */\n  avatar: PropTypes.node,\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    action: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    avatar: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    content: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    subheader: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    title: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    action: PropTypes.elementType,\n    avatar: PropTypes.elementType,\n    content: PropTypes.elementType,\n    root: PropTypes.elementType,\n    subheader: PropTypes.elementType,\n    title: PropTypes.elementType\n  }),\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   * @deprecated Use `slotProps.subheader` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   */\n  subheaderTypographyProps: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The content of the component.\n   */\n  title: PropTypes.node,\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   * @deprecated Use `slotProps.title` instead. This prop will be removed in a future major release. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default CardHeader;","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 1 3 5v6c0 5.55 3.84 10.74 9 12 5.16-1.26 9-6.45 9-12V5zm0 10.99h7c-.53 4.12-3.28 7.79-7 8.94V12H5V6.3l7-3.11z\"\n}), 'Security');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3m3-10H5V5h10z\"\n}), 'Save');","import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Typography,\n  Paper,\n  Tabs,\n  Tab,\n  TextField,\n  Button,\n  Switch,\n  FormControlLabel,\n  Grid,\n  Divider,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  IconButton,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Alert,\n  Card,\n  CardContent,\n  CardHeader,\n  Avatar,\n  Chip,\n  LinearProgress,\n  useTheme,\n  alpha\n} from '@mui/material';\nimport {\n  Person as PersonIcon,\n  Notifications as NotificationsIcon,\n  Security as SecurityIcon,\n  Settings as SettingsIcon,\n  Save as SaveIcon,\n  Restore as RestoreIcon,\n  Edit as EditIcon,\n  Palette as PaletteIcon,\n  Language as LanguageIcon,\n  Storage as StorageIcon\n} from '@mui/icons-material';\nimport { PageContainer, PageHeader } from '../../components';\n\ninterface ProfileData {\n  firstName: string;\n  lastName: string;\n  email: string;\n  company: string;\n  jobTitle: string;\n  avatar?: string;\n}\n\ninterface NotificationData {\n  emailNotifications: boolean;\n  smsNotifications: boolean;\n  pushNotifications: boolean;\n  emailUpdates: boolean;\n  weeklyReports: boolean;\n  securityAlerts: boolean;\n}\n\ninterface SecurityData {\n  password: string;\n  confirmPassword: string;\n  twoFactorAuth: boolean;\n  loginAlerts: boolean;\n}\n\ninterface SectionSettings {\n  id: string;\n  title: string;\n  description: string;\n  enabled: boolean;\n  order: number;\n}\n\ninterface StrategySettings {\n  showSectionNumbers: boolean;\n  showTableOfContents: boolean;\n  showPageNumbers: boolean;\n  sections: SectionSettings[];\n}\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: number;\n  value: number;\n}\n\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props;\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`settings-tabpanel-${index}`}\n      aria-labelledby={`settings-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box>{children}</Box>}\n    </div>\n  );\n}\n\nconst SettingsPage: React.FC = () => {\n  const theme = useTheme();\n  const [activeTab, setActiveTab] = useState<number>(0);\n  const [showModal, setShowModal] = useState<boolean>(false);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [currentSection, setCurrentSection] = useState<SectionSettings | null>(null);\n\n  // Form states\n  const [profileData, setProfileData] = useState<ProfileData>({\n    firstName: 'John',\n    lastName: 'Doe',\n    email: 'john.doe@example.com',\n    company: 'SpatialSense Ltd',\n    jobTitle: 'Solutions Architect',\n    avatar: ''\n  });\n\n  const [notificationData, setNotificationData] = useState<NotificationData>({\n    emailNotifications: true,\n    smsNotifications: false,\n    pushNotifications: true,\n    emailUpdates: true,\n    weeklyReports: false,\n    securityAlerts: true\n  });\n\n  const [securityData, setSecurityData] = useState<SecurityData>({\n    password: '',\n    confirmPassword: '',\n    twoFactorAuth: false,\n    loginAlerts: true\n  });\n\n  const [strategySettings, setStrategySettings] = useState<StrategySettings>({\n    showSectionNumbers: true,\n    showTableOfContents: true,\n    showPageNumbers: true,\n    sections: []\n  });\n\n  // Load initial data\n  useEffect(() => {\n    loadStrategySections();\n  }, []);\n\n  const loadStrategySections = async () => {\n    setIsLoading(true);\n    // Simulate API call\n    setTimeout(() => {\n      const mockSections: SectionSettings[] = [\n        { id: '1', title: 'Executive Summary', description: 'High-level overview of the project', enabled: true, order: 1 },\n        { id: '2', title: 'Market Analysis', description: 'Market trends and competitive landscape', enabled: true, order: 2 },\n        { id: '3', title: 'Technical Assessment', description: 'Technical requirements and implementation details', enabled: true, order: 3 },\n        { id: '4', title: 'Recommendations', description: 'Strategic recommendations and next steps', enabled: true, order: 4 },\n        { id: '5', title: 'Budget & Timeline', description: 'Cost estimates and project timeline', enabled: false, order: 5 }\n      ];\n      setStrategySettings(prev => ({ ...prev, sections: mockSections }));\n      setIsLoading(false);\n    }, 1000);\n  };\n\n  const handleTabChange = (event: React.SyntheticEvent, newValue: number) => {\n    setActiveTab(newValue);\n  };\n\n  const handleProfileSubmit = async () => {\n    setIsLoading(true);\n    // Simulate API call\n    setTimeout(() => {\n      setIsLoading(false);\n    }, 1000);\n  };\n\n  const handleNotificationSubmit = async () => {\n    setIsLoading(true);\n    // Simulate API call\n    setTimeout(() => {\n      setIsLoading(false);\n    }, 1000);\n  };\n\n  const handleSecuritySubmit = async () => {\n    if (securityData.password && securityData.password !== securityData.confirmPassword) {\n      return;\n    }\n    \n    setIsLoading(true);\n    // Simulate API call\n    setTimeout(() => {\n      if (securityData.password) {\n        setSecurityData(prev => ({ ...prev, password: '', confirmPassword: '' }));\n      }\n      setIsLoading(false);\n    }, 1000);\n  };\n\n  const handleStrategySettingsSubmit = () => {\n    setIsLoading(true);\n    setTimeout(() => {\n      setIsLoading(false);\n    }, 1000);\n  };\n\n  const resetStrategySettings = () => {\n    setStrategySettings({\n      showSectionNumbers: true,\n      showTableOfContents: true,\n      showPageNumbers: true,\n      sections: strategySettings.sections.map(section => ({ ...section, enabled: true }))\n    });\n  };\n\n  const openSectionModal = (section: SectionSettings) => {\n    setCurrentSection(section);\n    setShowModal(true);\n  };\n\n  const saveSectionSettings = () => {\n    if (currentSection) {\n      setStrategySettings(prev => ({\n        ...prev,\n        sections: prev.sections.map(section =>\n          section.id === currentSection.id ? currentSection : section\n        )\n      }));\n    }\n    setShowModal(false);\n    setCurrentSection(null);\n  };\n\n  return (\n    <PageContainer>\n      <PageHeader\n        title=\"Settings\"\n        subtitle=\"Manage your account preferences and application settings\"\n      />\n\n      <Paper sx={{ flexGrow: 1, display: 'flex', flexDirection: 'column' }}>\n        <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n          <Tabs value={activeTab} onChange={handleTabChange} variant=\"scrollable\" scrollButtons=\"auto\">\n            <Tab icon={<PersonIcon />} label=\"Profile\" />\n            <Tab icon={<NotificationsIcon />} label=\"Notifications\" />\n            <Tab icon={<SecurityIcon />} label=\"Security\" />\n            <Tab icon={<SettingsIcon />} label=\"Strategy Settings\" />\n          </Tabs>\n        </Box>\n\n        <Box sx={{ flexGrow: 1, p: 3 }}>\n          {/* Profile Tab */}\n          <TabPanel value={activeTab} index={0}>\n            <Grid container spacing={3}>\n              <Grid size={{ xs: 12, md: 4 }}>\n                <Card>\n                  <CardContent sx={{ textAlign: 'center', py: 4 }}>\n                    <Avatar\n                      sx={{\n                        width: 120,\n                        height: 120,\n                        mx: 'auto',\n                        mb: 2,\n                        bgcolor: 'primary.main',\n                        fontSize: '3rem'\n                      }}\n                    >\n                      {profileData.firstName.charAt(0)}\n                    </Avatar>\n                    <Typography variant=\"h6\" gutterBottom>\n                      {profileData.firstName} {profileData.lastName}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\n                      {profileData.jobTitle}\n                    </Typography>\n                    <Chip label={profileData.company} variant=\"outlined\" />\n                    <Button\n                      variant=\"outlined\"\n                      startIcon={<EditIcon />}\n                      sx={{ mt: 2, display: 'block', mx: 'auto' }}\n                    >\n                      Change Photo\n                    </Button>\n                  </CardContent>\n                </Card>\n              </Grid>\n              \n              <Grid size={{ xs: 12, md: 8 }}>\n                <Card>\n                  <CardHeader title=\"Personal Information\" />\n                  <CardContent>\n                    <Grid container spacing={3}>\n                      <Grid size={{ xs: 12, sm: 6 }}>\n                        <TextField\n                          fullWidth\n                          label=\"First Name\"\n                          value={profileData.firstName}\n                          onChange={(e) => setProfileData(prev => ({ ...prev, firstName: e.target.value }))}\n                        />\n                      </Grid>\n                      <Grid size={{ xs: 12, sm: 6 }}>\n                        <TextField\n                          fullWidth\n                          label=\"Last Name\"\n                          value={profileData.lastName}\n                          onChange={(e) => setProfileData(prev => ({ ...prev, lastName: e.target.value }))}\n                        />\n                      </Grid>\n                      <Grid size={{ xs: 12 }}>\n                        <TextField\n                          fullWidth\n                          label=\"Email\"\n                          type=\"email\"\n                          value={profileData.email}\n                          onChange={(e) => setProfileData(prev => ({ ...prev, email: e.target.value }))}\n                        />\n                      </Grid>\n                      <Grid size={{ xs: 12, sm: 6 }}>\n                        <TextField\n                          fullWidth\n                          label=\"Company\"\n                          value={profileData.company}\n                          onChange={(e) => setProfileData(prev => ({ ...prev, company: e.target.value }))}\n                        />\n                      </Grid>\n                      <Grid size={{ xs: 12, sm: 6 }}>\n                        <TextField\n                          fullWidth\n                          label=\"Job Title\"\n                          value={profileData.jobTitle}\n                          onChange={(e) => setProfileData(prev => ({ ...prev, jobTitle: e.target.value }))}\n                        />\n                      </Grid>\n                    </Grid>\n                    <Box sx={{ mt: 3, display: 'flex', justifyContent: 'flex-end' }}>\n                      <Button\n                        variant=\"contained\"\n                        startIcon={<SaveIcon />}\n                        onClick={handleProfileSubmit}\n                        disabled={isLoading}\n                      >\n                        Save Changes\n                      </Button>\n                    </Box>\n                  </CardContent>\n                </Card>\n              </Grid>\n            </Grid>\n          </TabPanel>\n        </Box>\n      </Paper>\n\n      {/* Section Configuration Modal */}\n      <Dialog open={showModal} onClose={() => setShowModal(false)} maxWidth=\"sm\" fullWidth>\n        <DialogTitle>Section Settings</DialogTitle>\n        <DialogContent>\n          <Box sx={{ pt: 1 }}>\n            <TextField\n              fullWidth\n              label=\"Section Title\"\n              value={currentSection?.title || ''}\n              onChange={(e) => setCurrentSection(prev => prev ? { ...prev, title: e.target.value } : null)}\n              sx={{ mb: 2 }}\n            />\n            <TextField\n              fullWidth\n              label=\"Description\"\n              multiline\n              rows={3}\n              value={currentSection?.description || ''}\n              onChange={(e) => setCurrentSection(prev => prev ? { ...prev, description: e.target.value } : null)}\n              sx={{ mb: 2 }}\n            />\n            <FormControlLabel\n              control={\n                <Switch\n                  checked={currentSection?.enabled || false}\n                  onChange={(e) => setCurrentSection(prev => prev ? { ...prev, enabled: e.target.checked } : null)}\n                />\n              }\n              label=\"Enable this section\"\n            />\n          </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setShowModal(false)}>Cancel</Button>\n          <Button variant=\"contained\" onClick={saveSectionSettings}>\n            Save Changes\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </PageContainer>\n  );\n};\n\nexport default SettingsPage;","import React from 'react';\nimport { Box, BoxProps } from '@mui/material';\n\ninterface PageContainerProps extends BoxProps {\n  children: React.ReactNode;\n  maxWidth?: string | number;\n  fullHeight?: boolean;\n}\n\nexport const PageContainer: React.FC<PageContainerProps> = ({\n  children,\n  maxWidth = '100%',\n  fullHeight = true,\n  sx,\n  ...props\n}) => {\n  return (\n    <Box\n      sx={{\n        height: fullHeight ? '100%' : 'auto',\n        display: 'flex',\n        flexDirection: 'column',\n        maxWidth,\n        ...sx,\n      }}\n      {...props}\n    >\n      {children}\n    </Box>\n  );\n};\n\nexport default PageContainer;","import React from 'react';\nimport { Box, Typography, Button, Skeleton } from '@mui/material';\nimport { Add as AddIcon } from '@mui/icons-material';\n\ninterface ActionButton {\n  label: string;\n  onClick?: (event?: React.MouseEvent<HTMLButtonElement>) => void;\n  icon?: React.ReactNode;\n  variant?: 'contained' | 'outlined' | 'text';\n  color?: 'primary' | 'secondary' | 'error' | 'warning' | 'info' | 'success';\n  disabled?: boolean;\n  loading?: boolean;\n}\n\ninterface PageHeaderProps {\n  title: string;\n  subtitle?: string;\n  actions?: ActionButton[];\n  loading?: boolean;\n}\n\nexport const PageHeader: React.FC<PageHeaderProps> = ({\n  title,\n  subtitle,\n  actions = [],\n  loading = false,\n}) => {\n  if (loading) {\n    return (\n      <Box\n        display=\"flex\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        mb={2}\n        sx={{\n          py: 1.5,\n          px: 2,\n        }}\n      >\n        <Box>\n          <Skeleton variant=\"text\" width={200} height={40} />\n          {subtitle && <Skeleton variant=\"text\" width={300} height={20} sx={{ mt: 0.5 }} />}\n        </Box>\n        <Skeleton variant=\"rectangular\" width={120} height={40} sx={{ borderRadius: 2 }} />\n      </Box>\n    );\n  }\n\n  return (\n    <Box\n      display=\"flex\"\n      justifyContent=\"space-between\"\n      alignItems=\"center\"\n      mb={2}\n      sx={{\n        py: 1.5,\n        px: 2,\n      }}\n    >\n      <Box>\n        <Typography \n          variant=\"h4\" \n          component=\"h1\" \n          sx={{ \n            fontWeight: 600, \n            color: 'text.primary' \n          }}\n        >\n          {title}\n        </Typography>\n        {subtitle && (\n          <Typography \n            variant=\"body2\" \n            color=\"text.secondary\" \n            sx={{ mt: 0.5 }}\n          >\n            {subtitle}\n          </Typography>\n        )}\n      </Box>\n      \n      {actions.length > 0 && (\n        <Box sx={{ display: 'flex', gap: 1 }}>\n          {actions.map((action, index) => (\n            <Button\n              key={index}\n              variant={action.variant || 'contained'}\n              color={action.color || 'primary'}\n              startIcon={action.icon || (action.variant === 'contained' ? <AddIcon /> : undefined)}\n              onClick={(e) => action.onClick?.(e)}\n              disabled={action.disabled || action.loading}\n              sx={{\n                borderRadius: 2,\n                py: 1.5,\n                px: 3,\n                boxShadow: action.variant === 'contained' ? '0 2px 8px rgba(0,0,0,0.1)' : 'none',\n                '&:hover': {\n                  boxShadow: action.variant === 'contained' ? '0 4px 12px rgba(0,0,0,0.15)' : 'none',\n                }\n              }}\n            >\n              {action.label}\n            </Button>\n          ))}\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport default PageHeader;","import React from 'react';\nimport {\n  Paper,\n  Grid,\n  TextField,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  InputAdornment,\n  Typography,\n  Skeleton,\n} from '@mui/material';\nimport { Search as SearchIcon } from '@mui/icons-material';\n\ninterface FilterOption {\n  value: string;\n  label: string;\n}\n\ninterface Filter {\n  id: string;\n  label: string;\n  value: string;\n  onChange: (value: string) => void;\n  options: FilterOption[];\n  size?: number; // Grid size\n}\n\ninterface FilterBarProps {\n  searchTerm?: string;\n  onSearchChange?: (value: string) => void;\n  searchPlaceholder?: string;\n  filters?: Filter[];\n  resultCount?: number;\n  resultLabel?: string;\n  loading?: boolean;\n}\n\nexport const FilterBar: React.FC<FilterBarProps> = ({\n  searchTerm = '',\n  onSearchChange,\n  searchPlaceholder = 'Search...',\n  filters = [],\n  resultCount,\n  resultLabel = 'items',\n  loading = false,\n}) => {\n  if (loading) {\n    return (\n      <Paper sx={{ p: 2, mb: 2, borderRadius: 1 }}>\n        <Grid container spacing={2} alignItems=\"center\">\n          <Grid size={{ xs: 12, md: 4 }}>\n            <Skeleton variant=\"rectangular\" height={56} sx={{ borderRadius: 1 }} />\n          </Grid>\n          {Array.from({ length: 3 }).map((_, index) => (\n            <Grid key={index} size={{ xs: 12, md: 3 }}>\n              <Skeleton variant=\"rectangular\" height={56} sx={{ borderRadius: 1 }} />\n            </Grid>\n          ))}\n        </Grid>\n      </Paper>\n    );\n  }\n\n  // Calculate grid sizes dynamically\n  const hasSearch = !!onSearchChange;\n  const filterCount = filters.length;\n  const totalElements = (hasSearch ? 1 : 0) + filterCount + (resultCount !== undefined ? 1 : 0);\n  \n  const getGridSize = (index: number) => {\n    if (totalElements <= 2) return { xs: 12, md: 6 };\n    if (totalElements === 3) return { xs: 12, md: 4 };\n    if (totalElements === 4) return { xs: 12, md: 3 };\n    return { xs: 12, md: 2 };\n  };\n\n  return (\n    <Paper sx={{ p: 2, mb: 2, borderRadius: 1 }}>\n      <Grid container spacing={2} alignItems=\"center\">\n        {/* Search Field */}\n        {onSearchChange && (\n          <Grid size={getGridSize(0)}>\n            <TextField\n              fullWidth\n              placeholder={searchPlaceholder}\n              value={searchTerm}\n              onChange={(e) => onSearchChange(e.target.value)}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <SearchIcon />\n                  </InputAdornment>\n                ),\n              }}\n            />\n          </Grid>\n        )}\n\n        {/* Filters */}\n        {filters.map((filter, index) => (\n          <Grid key={filter.id} size={filter.size ? { xs: 12, md: filter.size } : getGridSize(index + (hasSearch ? 1 : 0))}>\n            <FormControl fullWidth>\n              <InputLabel>{filter.label}</InputLabel>\n              <Select\n                value={filter.value}\n                label={filter.label}\n                onChange={(e) => filter.onChange(e.target.value)}\n              >\n                {filter.options.map((option) => (\n                  <MenuItem key={option.value} value={option.value}>\n                    {option.label}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </Grid>\n        ))}\n\n        {/* Result Count */}\n        {resultCount !== undefined && (\n          <Grid size={getGridSize(totalElements - 1)}>\n            <Typography variant=\"body2\" color=\"textSecondary\">\n              {resultCount} {resultLabel}\n            </Typography>\n          </Grid>\n        )}\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default FilterBar;","import React from 'react';\nimport { Chip, ChipProps } from '@mui/material';\n\ntype StatusVariant = 'active' | 'inactive' | 'pending' | 'completed' | 'draft' | 'archived' | 'error' | 'warning' | 'success' | 'info';\n\ninterface StatusChipProps extends Omit<ChipProps, 'color'> {\n  status: StatusVariant;\n  customColors?: Record<string, { bg: string; color: string }>;\n}\n\nconst defaultStatusColors: Record<StatusVariant, { bg: string; color: string }> = {\n  active: { bg: 'success.light', color: 'success.dark' },\n  inactive: { bg: 'grey.300', color: 'grey.800' },\n  pending: { bg: 'warning.light', color: 'warning.dark' },\n  completed: { bg: 'success.light', color: 'success.dark' },\n  draft: { bg: 'info.light', color: 'info.dark' },\n  archived: { bg: 'grey.500', color: 'common.white' },\n  error: { bg: 'error.light', color: 'error.dark' },\n  warning: { bg: 'warning.light', color: 'warning.dark' },\n  success: { bg: 'success.light', color: 'success.dark' },\n  info: { bg: 'info.light', color: 'info.dark' },\n};\n\nexport const StatusChip: React.FC<StatusChipProps> = ({\n  status,\n  customColors,\n  sx,\n  ...props\n}) => {\n  const colors = customColors?.[status] || defaultStatusColors[status] || defaultStatusColors.info;\n\n  return (\n    <Chip\n      label={status.charAt(0).toUpperCase() + status.slice(1)}\n      size=\"small\"\n      sx={{\n        bgcolor: colors.bg,\n        color: colors.color,\n        fontWeight: 'bold',\n        textTransform: 'capitalize',\n        '& .MuiChip-label': {\n          px: 1.5,\n        },\n        ...sx,\n      }}\n      {...props}\n    />\n  );\n};\n\nexport default StatusChip;","import React from 'react';\nimport { Box, Typography, Button, Paper } from '@mui/material';\nimport { Add as AddIcon, Inbox as InboxIcon } from '@mui/icons-material';\n\ninterface EmptyStateProps {\n  title: string;\n  description?: string;\n  icon?: React.ReactNode;\n  actionLabel?: string;\n  onAction?: (event?: React.MouseEvent<HTMLButtonElement>) => void;\n  actionIcon?: React.ReactNode;\n  variant?: 'paper' | 'box';\n  size?: 'small' | 'medium' | 'large';\n}\n\nexport const EmptyState: React.FC<EmptyStateProps> = ({\n  title,\n  description,\n  icon,\n  actionLabel,\n  onAction,\n  actionIcon,\n  variant = 'paper',\n  size = 'medium',\n}) => {\n  const sizeConfig = {\n    small: { p: 2, iconSize: 40, titleVariant: 'h6' as const, spacing: 1 },\n    medium: { p: 4, iconSize: 60, titleVariant: 'h5' as const, spacing: 2 },\n    large: { p: 6, iconSize: 80, titleVariant: 'h4' as const, spacing: 3 },\n  };\n\n  const config = sizeConfig[size];\n\n  const content = (\n    <Box sx={{ textAlign: 'center', p: config.p }}>\n      {/* Icon */}\n      <Box\n        sx={{\n          mb: config.spacing,\n          color: 'text.disabled',\n          '& > *': {\n            fontSize: config.iconSize,\n          },\n        }}\n      >\n        {icon || <InboxIcon fontSize=\"inherit\" />}\n      </Box>\n\n      {/* Title */}\n      <Typography \n        variant={config.titleVariant} \n        gutterBottom\n        sx={{ \n          fontWeight: 600,\n          color: 'text.secondary',\n          mb: description ? 1 : config.spacing\n        }}\n      >\n        {title}\n      </Typography>\n\n      {/* Description */}\n      {description && (\n        <Typography \n          variant=\"body1\" \n          color=\"text.secondary\" \n          sx={{ mb: config.spacing }}\n        >\n          {description}\n        </Typography>\n      )}\n\n      {/* Action Button */}\n      {actionLabel && onAction && (\n        <Button\n          variant=\"contained\"\n          startIcon={actionIcon || <AddIcon />}\n          onClick={(e) => onAction?.(e)}\n          sx={{\n            borderRadius: 2,\n            py: 1.5,\n            px: 3,\n          }}\n        >\n          {actionLabel}\n        </Button>\n      )}\n    </Box>\n  );\n\n  if (variant === 'paper') {\n    return <Paper>{content}</Paper>;\n  }\n\n  return content;\n};\n\nexport default EmptyState;","import React from 'react';\nimport { Box, CircularProgress, Typography, Backdrop, Portal } from '@mui/material';\n\ninterface LoadingOverlayProps {\n  loading: boolean;\n  message?: string;\n  variant?: 'overlay' | 'inline' | 'backdrop';\n  size?: number;\n}\n\nexport const LoadingOverlay: React.FC<LoadingOverlayProps> = ({\n  loading,\n  message,\n  variant = 'overlay',\n  size = 40,\n}) => {\n  if (!loading) return null;\n\n  const loadingContent = (\n    <Box\n      display=\"flex\"\n      flexDirection=\"column\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      gap={2}\n    >\n      <CircularProgress size={size} />\n      {message && (\n        <Typography variant=\"body2\" color=\"text.secondary\">\n          {message}\n        </Typography>\n      )}\n    </Box>\n  );\n\n  switch (variant) {\n    case 'backdrop':\n      return (\n        <Portal>\n          <Backdrop\n            open={loading}\n            sx={{\n              color: '#fff',\n              zIndex: (theme) => theme.zIndex.drawer + 1,\n              bgcolor: 'rgba(0, 0, 0, 0.5)',\n            }}\n          >\n            {loadingContent}\n          </Backdrop>\n        </Portal>\n      );\n\n    case 'overlay':\n      return (\n        <Box\n          position=\"fixed\"\n          top={0}\n          left={0}\n          width=\"100%\"\n          height=\"100%\"\n          bgcolor=\"rgba(0, 0, 0, 0.5)\"\n          display=\"flex\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          zIndex={9999}\n        >\n          {loadingContent}\n        </Box>\n      );\n\n    case 'inline':\n    default:\n      return (\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          p={4}\n        >\n          {loadingContent}\n        </Box>\n      );\n  }\n};\n\nexport default LoadingOverlay;","import React from 'react';\nimport { Card, CardContent, CardActions, Box, Typography, Skeleton } from '@mui/material';\n\ninterface DataCardProps {\n  title?: string;\n  subtitle?: string;\n  children?: React.ReactNode;\n  actions?: React.ReactNode;\n  loading?: boolean;\n  onClick?: () => void;\n  selected?: boolean;\n  variant?: 'elevation' | 'outlined';\n  size?: 'small' | 'medium' | 'large';\n}\n\nexport const DataCard: React.FC<DataCardProps> = ({\n  title,\n  subtitle,\n  children,\n  actions,\n  loading = false,\n  onClick,\n  selected = false,\n  variant = 'elevation',\n  size = 'medium',\n}) => {\n  const sizeConfig = {\n    small: { p: 1.5, spacing: 1 },\n    medium: { p: 2, spacing: 1.5 },\n    large: { p: 3, spacing: 2 },\n  };\n\n  const config = sizeConfig[size];\n\n  if (loading) {\n    return (\n      <Card \n        variant={variant}\n        sx={{\n          height: '100%',\n          display: 'flex',\n          flexDirection: 'column',\n        }}\n      >\n        <CardContent sx={{ p: config.p, flexGrow: 1 }}>\n          <Skeleton variant=\"text\" width=\"60%\" height={28} />\n          <Skeleton variant=\"text\" width=\"80%\" height={20} sx={{ mt: 0.5 }} />\n          <Box sx={{ mt: config.spacing }}>\n            <Skeleton variant=\"rectangular\" height={60} />\n          </Box>\n        </CardContent>\n        {actions && (\n          <CardActions sx={{ p: config.p, pt: 0 }}>\n            <Skeleton variant=\"rectangular\" width={80} height={32} />\n          </CardActions>\n        )}\n      </Card>\n    );\n  }\n\n  return (\n    <Card\n      variant={variant}\n      sx={{\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        cursor: onClick ? 'pointer' : 'default',\n        border: selected ? '2px solid' : undefined,\n        borderColor: selected ? 'primary.main' : undefined,\n        transition: 'all 0.2s ease-in-out',\n        '&:hover': onClick ? {\n          transform: 'translateY(-2px)',\n          boxShadow: (theme) => theme.shadows[4],\n        } : {},\n      }}\n      onClick={onClick}\n    >\n      <CardContent sx={{ p: config.p, flexGrow: 1 }}>\n        {/* Header */}\n        {(title || subtitle) && (\n          <Box sx={{ mb: config.spacing }}>\n            {title && (\n              <Typography \n                variant=\"h6\" \n                component=\"h3\"\n                sx={{ \n                  fontWeight: 600,\n                  lineHeight: 1.2,\n                  mb: subtitle ? 0.5 : 0\n                }}\n              >\n                {title}\n              </Typography>\n            )}\n            {subtitle && (\n              <Typography \n                variant=\"body2\" \n                color=\"text.secondary\"\n                sx={{ lineHeight: 1.4 }}\n              >\n                {subtitle}\n              </Typography>\n            )}\n          </Box>\n        )}\n\n        {/* Content */}\n        {children}\n      </CardContent>\n\n      {/* Actions */}\n      {actions && (\n        <CardActions sx={{ p: config.p, pt: 0 }}>\n          {actions}\n        </CardActions>\n      )}\n    </Card>\n  );\n};\n\nexport default DataCard;","import { FC } from 'react';\nimport { List, ListItem, ListItemButton, ListItemIcon, ListItemText, Divider, Box, Typography } from '@mui/material';\nimport { Link as RouterLink, useLocation } from 'react-router-dom';\nimport DashboardIcon from '@mui/icons-material/Dashboard';\nimport PeopleIcon from '@mui/icons-material/People';\nimport AssessmentIcon from '@mui/icons-material/Assessment';\nimport PsychologyIcon from '@mui/icons-material/Psychology';\nimport LightbulbIcon from '@mui/icons-material/Lightbulb';\nimport MapIcon from '@mui/icons-material/Map';\nimport TimelineIcon from '@mui/icons-material/Timeline';\nimport ReceiptIcon from '@mui/icons-material/Receipt';\nimport SettingsIcon from '@mui/icons-material/Settings';\nimport { styled } from '@mui/material/styles';\nimport React from 'react';\n\ninterface SidebarProps {\n  onClose?: () => void;\n}\n\nconst StyledNavItem = styled(ListItem)(({ theme }) => ({\n  '&.Mui-selected': {\n    backgroundColor: theme.palette.action.selected,\n    '&:hover': {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n  '&:hover': {\n    backgroundColor: theme.palette.action.hover,\n  },\n  borderRadius: theme.shape.borderRadius,\n  margin: theme.spacing(0.5, 1.5),\n  padding: theme.spacing(1, 2),\n  width: 'auto',\n}));\n\nconst StyledNavItemIcon = styled(ListItemIcon)({\n  minWidth: 40,\n  color: 'inherit',\n});\n\nconst NavSection: FC<{ title: string }> = ({ title }) => (\n  <Box sx={{ px: 2, py: 1.5 }}>\n    <Typography variant=\"overline\" color=\"text.secondary\" fontWeight=\"medium\">\n      {title}\n    </Typography>\n  </Box>\n);\n\nconst navItems = [\n  { text: 'Overview', icon: <DashboardIcon />, path: '/' },\n  { text: 'Clients', icon: <PeopleIcon />, path: '/clients' },\n  { text: 'Reports', icon: <AssessmentIcon />, path: '/reports' },\n];\n\nconst analysisItems = [\n  { text: 'AI Analysis', icon: <PsychologyIcon />, path: '/analysis' },\n  { text: 'Automation Strategy', icon: <LightbulbIcon />, path: '/strategy' },\n  { text: 'Floor Map', icon: <MapIcon />, path: '/floorplan' },\n];\n\nconst otherItems = [\n  { text: 'Timeline', icon: <TimelineIcon />, path: '/timeline' },\n  { text: 'Invoicing', icon: <ReceiptIcon />, path: '/invoicing' },\n  { text: 'Settings', icon: <SettingsIcon />, path: '/settings' },\n];\n\nexport const Sidebar: FC<SidebarProps> = ({ onClose }) => {\n  const location = useLocation();\n\n  const renderNavItems = (items: typeof navItems) =>\n    items.map((item) => (\n      <ListItem key={item.path} disablePadding>\n        <ListItemButton\n          component={RouterLink}\n          to={item.path}\n          selected={location.pathname === item.path}\n          onClick={onClose}\n          sx={{\n            '&.Mui-selected': {\n              backgroundColor: 'action.selected',\n              '&:hover': {\n                backgroundColor: 'action.hover',\n              },\n            },\n            '&:hover': {\n              backgroundColor: 'action.hover',\n            },\n          }}\n        >\n          <StyledNavItemIcon>{item.icon}</StyledNavItemIcon>\n          <ListItemText primary={item.text} />\n        </ListItemButton>\n      </ListItem>\n    ));\n\n  return (\n    <Box sx={{ width: 240 }} role=\"presentation\">\n      <Box sx={{ p: 2, display: 'flex', alignItems: 'center' }}>\n        <Typography variant=\"h6\" component=\"h1\" sx={{ fontWeight: 700 }}>\n          SSP\n        </Typography>\n      </Box>\n      \n      <List>\n        <NavSection title=\"Dashboard\" />\n        {renderNavItems(navItems)}\n        \n        <NavSection title=\"Analysis\" />\n        {renderNavItems(analysisItems)}\n        \n        <NavSection title=\"Other\" />\n        {renderNavItems(otherItems)}\n      </List>\n    </Box>\n  );\n};\n\nexport default Sidebar;\n"],"names":["getCardHeaderUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardHeaderRoot","styled","name","overridesResolver","props","styles","concat","cardHeaderClasses","title","subheader","root","display","alignItems","padding","CardHeaderAvatar","flex","marginRight","CardHeaderAction","alignSelf","marginTop","marginBottom","CardHeaderContent","typographyClasses","React","inProps","ref","useDefaultProps","action","avatar","component","disableTypography","subheaderProp","subheaderTypographyProps","titleProp","titleTypographyProps","slots","slotProps","other","_objectWithoutProperties","ownerState","_objectSpread","classes","composeClasses","content","useUtilityClasses","externalForwardedProps","TitleSlot","titleSlotProps","useSlot","className","elementType","Typography","additionalProps","variant","type","_jsx","children","SubheaderSlot","subheaderSlotProps","color","RootSlot","rootSlotProps","AvatarSlot","avatarSlotProps","ContentSlot","contentSlotProps","ActionSlot","actionSlotProps","_jsxs","createSvgIcon","d","TabPanel","value","index","role","hidden","id","Box","SettingsPage","useTheme","activeTab","setActiveTab","useState","showModal","setShowModal","isLoading","setIsLoading","currentSection","setCurrentSection","profileData","setProfileData","firstName","lastName","email","company","jobTitle","notificationData","setNotificationData","emailNotifications","smsNotifications","pushNotifications","emailUpdates","weeklyReports","securityAlerts","securityData","setSecurityData","password","confirmPassword","twoFactorAuth","loginAlerts","strategySettings","setStrategySettings","showSectionNumbers","showTableOfContents","showPageNumbers","sections","useEffect","loadStrategySections","async","setTimeout","mockSections","description","enabled","order","prev","PageContainer","PageHeader","subtitle","Paper","sx","flexGrow","flexDirection","borderBottom","borderColor","Tabs","onChange","handleTabChange","event","newValue","scrollButtons","Tab","icon","PersonIcon","label","NotificationsIcon","SecurityIcon","SettingsIcon","p","Grid","container","spacing","size","xs","md","Card","CardContent","textAlign","py","Avatar","width","height","mx","mb","bgcolor","fontSize","charAt","gutterBottom","Chip","Button","startIcon","EditIcon","mt","CardHeader","sm","TextField","fullWidth","e","target","justifyContent","SaveIcon","onClick","disabled","Dialog","open","onClose","maxWidth","DialogTitle","DialogContent","pt","multiline","rows","FormControlLabel","control","Switch","checked","DialogActions","saveSectionSettings","map","section","_ref","fullHeight","actions","loading","px","Skeleton","borderRadius","fontWeight","length","gap","AddIcon","undefined","_action$onClick","call","boxShadow","FilterBar","searchTerm","onSearchChange","searchPlaceholder","filters","resultCount","resultLabel","Array","from","_","hasSearch","filterCount","totalElements","getGridSize","placeholder","InputProps","startAdornment","InputAdornment","position","SearchIcon","filter","FormControl","InputLabel","Select","options","option","MenuItem","defaultStatusColors","active","bg","inactive","pending","completed","draft","archived","error","warning","success","info","StatusChip","status","customColors","colors","toUpperCase","slice","textTransform","EmptyState","actionLabel","onAction","actionIcon","config","small","iconSize","titleVariant","medium","large","InboxIcon","LoadingOverlay","message","loadingContent","CircularProgress","Portal","Backdrop","zIndex","theme","drawer","top","left","DataCard","selected","CardActions","cursor","border","transition","transform","shadows","lineHeight","ListItem","backgroundColor","palette","hover","shape","margin","ListItemIcon","minWidth","DashboardIcon","PeopleIcon","AssessmentIcon","PsychologyIcon","LightbulbIcon","MapIcon","TimelineIcon","ReceiptIcon"],"sourceRoot":""}